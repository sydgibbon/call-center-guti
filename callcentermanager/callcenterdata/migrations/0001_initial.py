# Generated by Django 4.0.5 on 2022-08-28 21:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.CharField(max_length=255, unique=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('agenttypes_id', models.PositiveIntegerField()),
                ('last_contact', models.DateTimeField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('locked', models.IntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('useragent', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.CharField(blank=True, max_length=6, null=True)),
                ('threads_networkdiscovery', models.IntegerField()),
                ('threads_networkinventory', models.IntegerField()),
                ('timeout_networkdiscovery', models.IntegerField()),
                ('timeout_networkinventory', models.IntegerField()),
            ],
            options={
                'db_table': 'agents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Agenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'agenttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Apiclients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('ipv4_range_start', models.BigIntegerField(blank=True, null=True)),
                ('ipv4_range_end', models.BigIntegerField(blank=True, null=True)),
                ('ipv6', models.CharField(blank=True, max_length=255, null=True)),
                ('app_token', models.CharField(blank=True, max_length=255, null=True)),
                ('app_token_date', models.DateTimeField(blank=True, null=True)),
                ('dolog_method', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'apiclients',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Applianceenvironments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'applianceenvironments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Appliances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('is_deleted', models.IntegerField()),
                ('appliancetypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('applianceenvironments_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('externalidentifier', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_helpdesk_visible', models.IntegerField()),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appliances',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AppliancesItemsRelations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliances_items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'appliances_items_relations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Appliancetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('externalidentifier', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'appliancetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Authldapreplicates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authldaps_id', models.PositiveIntegerField()),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('timeout', models.IntegerField()),
            ],
            options={
                'db_table': 'authldapreplicates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Authldaps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('basedn', models.CharField(blank=True, max_length=255, null=True)),
                ('rootdn', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField()),
                ('condition', models.TextField(blank=True, null=True)),
                ('login_field', models.CharField(blank=True, max_length=255, null=True)),
                ('sync_field', models.CharField(blank=True, max_length=255, null=True)),
                ('use_tls', models.IntegerField()),
                ('group_field', models.CharField(blank=True, max_length=255, null=True)),
                ('group_condition', models.TextField(blank=True, null=True)),
                ('group_search_type', models.IntegerField()),
                ('group_member_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email1_field', models.CharField(blank=True, max_length=255, null=True)),
                ('realname_field', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname_field', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_field', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2_field', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_field', models.CharField(blank=True, max_length=255, null=True)),
                ('comment_field', models.CharField(blank=True, max_length=255, null=True)),
                ('use_dn', models.IntegerField()),
                ('time_offset', models.IntegerField()),
                ('deref_option', models.IntegerField()),
                ('title_field', models.CharField(blank=True, max_length=255, null=True)),
                ('category_field', models.CharField(blank=True, max_length=255, null=True)),
                ('language_field', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_field', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_condition', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_default', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('rootdn_passwd', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email2_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email3_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email4_field', models.CharField(blank=True, max_length=255, null=True)),
                ('location_field', models.CharField(blank=True, max_length=255, null=True)),
                ('responsible_field', models.CharField(blank=True, max_length=255, null=True)),
                ('pagesize', models.IntegerField()),
                ('ldap_maxlimit', models.IntegerField()),
                ('can_support_pagesize', models.IntegerField()),
                ('picture_field', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('inventory_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('tls_certfile', models.TextField(blank=True, null=True)),
                ('tls_keyfile', models.TextField(blank=True, null=True)),
                ('use_bind', models.IntegerField()),
                ('timeout', models.IntegerField()),
            ],
            options={
                'db_table': 'authldaps',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Authmails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('connect_string', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
            ],
            options={
                'db_table': 'authmails',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Autoupdatesystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'autoupdatesystems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Blacklistedmailcontents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'blacklistedmailcontents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Blacklists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'blacklists',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Budgets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('value', models.DecimalField(decimal_places=4, max_digits=20)),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('budgettypes_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'budgets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Budgettypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'budgettypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('itemtype_endpoint_a', models.CharField(blank=True, max_length=255, null=True)),
                ('itemtype_endpoint_b', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id_endpoint_a', models.PositiveIntegerField()),
                ('items_id_endpoint_b', models.PositiveIntegerField()),
                ('socketmodels_id_endpoint_a', models.PositiveIntegerField()),
                ('socketmodels_id_endpoint_b', models.PositiveIntegerField()),
                ('sockets_id_endpoint_a', models.PositiveIntegerField()),
                ('sockets_id_endpoint_b', models.PositiveIntegerField()),
                ('cablestrands_id', models.PositiveIntegerField()),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('cabletypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cables',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cablestrands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cablestrands',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cabletypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cabletypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Calendars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('cache_duration', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendars',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Calendarsegments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendars_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('day', models.IntegerField()),
                ('begin', models.TimeField(blank=True, null=True)),
                ('end', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendarsegments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cartridgeitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('cartridgeitemtypes_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('alarm_threshold', models.IntegerField()),
                ('stock_target', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cartridgeitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cartridgeitemtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cartridgeitemtypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cartridges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('cartridgeitems_id', models.PositiveIntegerField()),
                ('printers_id', models.PositiveIntegerField()),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_use', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('pages', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cartridges',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('certificatetypes_id', models.PositiveIntegerField()),
                ('dns_name', models.CharField(blank=True, max_length=255, null=True)),
                ('dns_suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('is_autosign', models.IntegerField()),
                ('date_expiration', models.DateField(blank=True, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('command', models.TextField(blank=True, null=True)),
                ('certificate_request', models.TextField(blank=True, null=True)),
                ('certificate_item', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certificates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Certificatetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certificatetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Changecosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('cost_time', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_fixed', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_material', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'changecosts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Changes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('solvedate', models.DateTimeField(blank=True, null=True)),
                ('closedate', models.DateTimeField(blank=True, null=True)),
                ('time_to_resolve', models.DateTimeField(blank=True, null=True)),
                ('users_id_recipient', models.PositiveIntegerField()),
                ('users_id_lastupdater', models.PositiveIntegerField()),
                ('urgency', models.IntegerField()),
                ('impact', models.IntegerField()),
                ('priority', models.IntegerField()),
                ('itilcategories_id', models.PositiveIntegerField()),
                ('impactcontent', models.TextField(blank=True, null=True)),
                ('controlistcontent', models.TextField(blank=True, null=True)),
                ('rolloutplancontent', models.TextField(blank=True, null=True)),
                ('backoutplancontent', models.TextField(blank=True, null=True)),
                ('checklistcontent', models.TextField(blank=True, null=True)),
                ('global_validation', models.IntegerField()),
                ('validation_percent', models.IntegerField()),
                ('actiontime', models.IntegerField()),
                ('begin_waiting_date', models.DateTimeField(blank=True, null=True)),
                ('waiting_duration', models.IntegerField()),
                ('close_delay_stat', models.IntegerField()),
                ('solve_delay_stat', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'changes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Changetasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('changes_id', models.PositiveIntegerField()),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('state', models.IntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_editor', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('tasktemplates_id', models.PositiveIntegerField()),
                ('timeline_position', models.IntegerField()),
                ('is_private', models.IntegerField()),
            ],
            options={
                'db_table': 'changetasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Changetemplatepredefinedfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'changetemplatepredefinedfields',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Changetemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'changetemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Changevalidations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('changes_id', models.PositiveIntegerField()),
                ('users_id_validate', models.PositiveIntegerField()),
                ('comment_submission', models.TextField(blank=True, null=True)),
                ('comment_validation', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('validation_date', models.DateTimeField(blank=True, null=True)),
                ('timeline_position', models.IntegerField()),
            ],
            options={
                'db_table': 'changevalidations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Clusters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('clustertypes_id', models.PositiveIntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'clusters',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Clustertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'clustertypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computerantiviruses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('computers_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('antivirus_version', models.CharField(blank=True, max_length=255, null=True)),
                ('signature_version', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_uptodate', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_expiration', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computerantiviruses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computermodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('computermodels_id', models.PositiveIntegerField()),
                ('computertypes_id', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ComputersItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('computers_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'computers_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computertypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computervirtualmachines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('computers_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('virtualmachinestates_id', models.PositiveIntegerField()),
                ('virtualmachinesystems_id', models.PositiveIntegerField()),
                ('virtualmachinetypes_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(max_length=255)),
                ('vcpu', models.IntegerField()),
                ('ram', models.CharField(max_length=255)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computervirtualmachines',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Consumableitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('consumableitemtypes_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('alarm_threshold', models.IntegerField()),
                ('stock_target', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consumableitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Consumableitemtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consumableitemtypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Consumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('consumableitems_id', models.PositiveIntegerField()),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consumables',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('contacttypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('usertitles_id', models.PositiveIntegerField()),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contacts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contacttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contacttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contractcosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contracts_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'contractcosts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('num', models.CharField(blank=True, max_length=255, null=True)),
                ('contracttypes_id', models.PositiveIntegerField()),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('duration', models.IntegerField()),
                ('notice', models.IntegerField()),
                ('periodicity', models.IntegerField()),
                ('billing', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('accounting_number', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('week_begin_hour', models.TimeField()),
                ('week_end_hour', models.TimeField()),
                ('saturday_begin_hour', models.TimeField()),
                ('saturday_end_hour', models.TimeField()),
                ('use_saturday', models.IntegerField()),
                ('sunday_begin_hour', models.TimeField()),
                ('sunday_end_hour', models.TimeField()),
                ('use_sunday', models.IntegerField()),
                ('max_links_allowed', models.IntegerField()),
                ('alert', models.IntegerField()),
                ('renewal', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_template', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contracts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contracttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contracttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Crontasklogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crontasks_id', models.PositiveIntegerField()),
                ('crontasklogs_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('state', models.IntegerField()),
                ('elapsed', models.FloatField()),
                ('volume', models.IntegerField()),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'crontasklogs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DashboardsDashboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('context', models.CharField(max_length=100)),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'dashboards_dashboards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DashboardsFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboards_dashboards_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('filter', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dashboards_filters',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DashboardsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboards_dashboards_id', models.PositiveIntegerField()),
                ('gridstack_id', models.CharField(max_length=100)),
                ('card_id', models.CharField(max_length=100)),
                ('x', models.IntegerField(blank=True, null=True)),
                ('y', models.IntegerField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('card_options', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dashboards_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Databaseinstancecategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'databaseinstancecategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Databaseinstances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=255)),
                ('port', models.CharField(max_length=10)),
                ('path', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
                ('databaseinstancetypes_id', models.PositiveIntegerField()),
                ('databaseinstancecategories_id', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('is_onbackup', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_helpdesk_visible', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_lastboot', models.DateTimeField(blank=True, null=True)),
                ('date_lastbackup', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'databaseinstances',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Databaseinstancetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'databaseinstancetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Databases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
                ('databaseinstances_id', models.PositiveIntegerField()),
                ('is_onbackup', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('date_lastbackup', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'databases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Datacenters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'datacenters',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Dcrooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('vis_cols', models.IntegerField(blank=True, null=True)),
                ('vis_rows', models.IntegerField(blank=True, null=True)),
                ('blueprint', models.TextField(blank=True, null=True)),
                ('datacenters_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dcrooms',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicebatteries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('voltage', models.IntegerField(blank=True, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('devicebatterytypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicebatterymodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicebatteries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicebatterymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicebatterymodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicebatterytypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicebatterytypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecameramodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicecameramodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecameras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('flashunit', models.IntegerField()),
                ('lensfacing', models.CharField(blank=True, max_length=255, null=True)),
                ('orientation', models.CharField(blank=True, max_length=255, null=True)),
                ('focallength', models.CharField(blank=True, max_length=255, null=True)),
                ('sensorsize', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicecameramodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('support', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicecameras',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecasemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicecasemodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecasetypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicecasemodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicecases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecasetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicecasetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecontrolmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicecontrolmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecontrols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('is_raid', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('interfacetypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicecontrolmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicecontrols',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicedrivemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicedrivemodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicedrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('is_writer', models.IntegerField()),
                ('speed', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('interfacetypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicedrivemodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicedrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicefirmwaremodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicefirmwaremodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicefirmwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('date', models.DateField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('devicefirmwaretypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicefirmwaremodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicefirmwares',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicefirmwaretypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicefirmwaretypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegenericmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicegenericmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegenerics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('devicegenerictypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('devicegenericmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicegenerics',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegenerictypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicegenerictypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegraphiccardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicegraphiccardmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegraphiccards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('interfacetypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('memory_default', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicegraphiccardmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('chipset', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicegraphiccards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deviceharddrivemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'deviceharddrivemodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deviceharddrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('rpm', models.CharField(blank=True, max_length=255, null=True)),
                ('interfacetypes_id', models.PositiveIntegerField()),
                ('cache', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('capacity_default', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('deviceharddrivemodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'deviceharddrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicememories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('frequence', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('size_default', models.IntegerField()),
                ('devicememorytypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicememorymodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicememories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicememorymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicememorymodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicememorytypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicememorytypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicemotherboardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicemotherboardmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicemotherboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('chipset', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicemotherboardmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicemotherboards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicenetworkcardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicenetworkcardmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicenetworkcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('bandwidth', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('mac_default', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicenetworkcardmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicenetworkcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicepcimodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicepcimodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicepcis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('devicenetworkcardmodels_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicepcimodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicepcis',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('power', models.CharField(blank=True, max_length=255, null=True)),
                ('is_atx', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicepowersupplymodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicepowersupplies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicepowersupplymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicepowersupplymodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deviceprocessormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'deviceprocessormodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deviceprocessors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('frequence', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('frequency_default', models.IntegerField()),
                ('nbcores_default', models.IntegerField(blank=True, null=True)),
                ('nbthreads_default', models.IntegerField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('deviceprocessormodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'deviceprocessors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesensormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicesensormodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesensors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('devicesensortypes_id', models.PositiveIntegerField()),
                ('devicesensormodels_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicesensors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesensortypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicesensortypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesimcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('voltage', models.IntegerField(blank=True, null=True)),
                ('devicesimcardtypes_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('allow_voip', models.IntegerField()),
            ],
            options={
                'db_table': 'devicesimcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesimcardtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicesimcardtypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesoundcardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicesoundcardmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesoundcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicesoundcardmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicesoundcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('filename', models.CharField(blank=True, max_length=255, null=True)),
                ('filepath', models.CharField(blank=True, max_length=255, null=True)),
                ('documentcategories_id', models.PositiveIntegerField()),
                ('mime', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
                ('sha1sum', models.CharField(blank=True, max_length=40, null=True)),
                ('is_blacklisted', models.IntegerField()),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'documents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Documenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ext', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('mime', models.CharField(blank=True, max_length=255, null=True)),
                ('is_uploadable', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'documenttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Domainrecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('data_obj', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('domains_id', models.PositiveIntegerField()),
                ('domainrecordtypes_id', models.PositiveIntegerField()),
                ('ttl', models.IntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'domainrecords',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Domainrecordtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('fields', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'domainrecordtypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Domainrelations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'domainrelations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Domains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('domaintypes_id', models.PositiveIntegerField()),
                ('date_expiration', models.DateTimeField(blank=True, null=True)),
                ('date_domaincreation', models.DateTimeField(blank=True, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'domains',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Domaintypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'domaintypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Enclosuremodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enclosuremodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Enclosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('enclosuremodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('orientation', models.IntegerField(blank=True, null=True)),
                ('power_supplies', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enclosures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EntitiesKnowbaseitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'entities_knowbaseitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EntitiesReminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'entities_reminders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EntitiesRssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'entities_rssfeeds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('service', models.CharField(blank=True, max_length=255, null=True)),
                ('level', models.IntegerField()),
                ('message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'events',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fieldblacklists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('field', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('itemtype', models.CharField(max_length=255)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fieldblacklists',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fieldunicities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_recursive', models.IntegerField()),
                ('itemtype', models.CharField(max_length=255)),
                ('entities_id', models.PositiveIntegerField()),
                ('fields', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('action_refuse', models.IntegerField()),
                ('action_notify', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fieldunicities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Filesystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'filesystems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fqdns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('fqdn', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fqdns',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('ldap_field', models.CharField(blank=True, max_length=255, null=True)),
                ('ldap_value', models.TextField(blank=True, null=True)),
                ('ldap_group_dn', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('groups_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_requester', models.IntegerField()),
                ('is_watcher', models.IntegerField()),
                ('is_assign', models.IntegerField()),
                ('is_task', models.IntegerField()),
                ('is_notify', models.IntegerField()),
                ('is_itemgroup', models.IntegerField()),
                ('is_usergroup', models.IntegerField()),
                ('is_manager', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'groups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupsKnowbaseitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'groups_knowbaseitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupsReminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'groups_reminders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupsRssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'groups_rssfeeds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Holidays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_perpetual', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'holidays',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Imageformats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'imageformats',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Imageresolutions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_video', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'imageresolutions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Impactcompounds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'impactcompounds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Impactcontexts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positions', models.TextField()),
                ('zoom', models.FloatField()),
                ('pan_x', models.FloatField()),
                ('pan_y', models.FloatField()),
                ('impact_color', models.CharField(max_length=255)),
                ('depends_color', models.CharField(max_length=255)),
                ('impact_and_depends_color', models.CharField(max_length=255)),
                ('show_depends', models.IntegerField()),
                ('show_impact', models.IntegerField()),
                ('max_depth', models.IntegerField()),
            ],
            options={
                'db_table': 'impactcontexts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Interfacetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'interfacetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ipaddresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('version', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('binary_0', models.PositiveIntegerField()),
                ('binary_1', models.PositiveIntegerField()),
                ('binary_2', models.PositiveIntegerField()),
                ('binary_3', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('mainitems_id', models.PositiveIntegerField()),
                ('mainitemtype', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ipaddresses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ipnetworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('ipnetworks_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('addressable', models.IntegerField()),
                ('version', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=40, null=True)),
                ('address_0', models.PositiveIntegerField()),
                ('address_1', models.PositiveIntegerField()),
                ('address_2', models.PositiveIntegerField()),
                ('address_3', models.PositiveIntegerField()),
                ('netmask', models.CharField(blank=True, max_length=40, null=True)),
                ('netmask_0', models.PositiveIntegerField()),
                ('netmask_1', models.PositiveIntegerField()),
                ('netmask_2', models.PositiveIntegerField()),
                ('netmask_3', models.PositiveIntegerField()),
                ('gateway', models.CharField(blank=True, max_length=40, null=True)),
                ('gateway_0', models.PositiveIntegerField()),
                ('gateway_1', models.PositiveIntegerField()),
                ('gateway_2', models.PositiveIntegerField()),
                ('gateway_3', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ipnetworks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicebatteries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicebatteries_id', models.PositiveIntegerField()),
                ('manufacturing_date', models.DateField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('real_capacity', models.IntegerField()),
            ],
            options={
                'db_table': 'items_devicebatteries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecameras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecameras_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'items_devicecameras',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecamerasImageformats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_devicecameras_id', models.PositiveIntegerField()),
                ('imageformats_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'items_devicecameras_imageformats',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecamerasImageresolutions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_devicecameras_id', models.PositiveIntegerField()),
                ('imageresolutions_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'items_devicecameras_imageresolutions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecases_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicecases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecontrols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecontrols_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicecontrols',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicedrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicedrives_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicedrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicefirmwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicefirmwares_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicefirmwares',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicegenerics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicegenerics_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicegenerics',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicegraphiccards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicegraphiccards_id', models.PositiveIntegerField()),
                ('memory', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicegraphiccards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDeviceharddrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('deviceharddrives_id', models.PositiveIntegerField()),
                ('capacity', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_deviceharddrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicememories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicememories_id', models.PositiveIntegerField()),
                ('size', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicememories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicemotherboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicemotherboards_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicemotherboards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicenetworkcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicenetworkcards_id', models.PositiveIntegerField()),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicenetworkcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicepcis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicepcis_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicepcis',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicepowersupplies_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicepowersupplies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDeviceprocessors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('deviceprocessors_id', models.PositiveIntegerField()),
                ('frequency', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('nbcores', models.IntegerField(blank=True, null=True)),
                ('nbthreads', models.IntegerField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_deviceprocessors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicesensors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicesensors_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicesensors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicesimcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('devicesimcards_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('lines_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('pin', models.CharField(max_length=255)),
                ('pin2', models.CharField(max_length=255)),
                ('puk', models.CharField(max_length=255)),
                ('puk2', models.CharField(max_length=255)),
                ('msin', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'items_devicesimcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicesoundcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicesoundcards_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_devicesoundcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDisks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('device', models.CharField(blank=True, max_length=255, null=True)),
                ('mountpoint', models.CharField(blank=True, max_length=255, null=True)),
                ('filesystems_id', models.PositiveIntegerField()),
                ('totalsize', models.IntegerField()),
                ('freesize', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('encryption_status', models.IntegerField()),
                ('encryption_tool', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption_algorithm', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption_type', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'items_disks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsRemotemanagements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('remoteid', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'items_remotemanagements',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsSoftwarelicenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('softwarelicenses_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'items_softwarelicenses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Itilcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('itilcategories_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('knowbaseitemcategories_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_helpdeskvisible', models.IntegerField()),
                ('tickettemplates_id_incident', models.PositiveIntegerField()),
                ('tickettemplates_id_demand', models.PositiveIntegerField()),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('is_incident', models.IntegerField()),
                ('is_request', models.IntegerField()),
                ('is_problem', models.IntegerField()),
                ('is_change', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'itilcategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Itilfollowups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_editor', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('is_private', models.IntegerField()),
                ('requesttypes_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('timeline_position', models.IntegerField()),
                ('sourceitems_id', models.PositiveIntegerField()),
                ('sourceof_items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'itilfollowups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Itilfollowuptemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('requesttypes_id', models.PositiveIntegerField()),
                ('is_private', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'itilfollowuptemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Itilsolutions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('solutiontypes_id', models.PositiveIntegerField()),
                ('solutiontype_name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_approval', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_editor', models.PositiveIntegerField()),
                ('users_id_approval', models.PositiveIntegerField()),
                ('user_name_approval', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField()),
                ('itilfollowups_id', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'itilsolutions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Knowbaseitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('is_faq', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('view', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'knowbaseitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KnowbaseitemsComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('parent_comment_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'knowbaseitems_comments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KnowbaseitemsKnowbaseitemcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('knowbaseitemcategories_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'knowbaseitems_knowbaseitemcategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KnowbaseitemsProfiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'knowbaseitems_profiles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KnowbaseitemsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'knowbaseitems_users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Knowbaseitemtranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'knowbaseitemtranslations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('caller_num', models.CharField(max_length=255)),
                ('caller_name', models.CharField(max_length=255)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('lineoperators_id', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('linetypes_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lines',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Linetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'linetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('open_window', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'links',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype_link', models.CharField(max_length=100)),
                ('linked_action', models.IntegerField()),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('id_search_option', models.IntegerField()),
                ('old_value', models.CharField(blank=True, max_length=255, null=True)),
                ('new_value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'logs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Mailcollectors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('login', models.CharField(blank=True, max_length=255, null=True)),
                ('filesize_max', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('passwd', models.CharField(blank=True, max_length=255, null=True)),
                ('accepted', models.CharField(blank=True, max_length=255, null=True)),
                ('refused', models.CharField(blank=True, max_length=255, null=True)),
                ('errors', models.IntegerField()),
                ('use_mail_date', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('requester_field', models.IntegerField()),
                ('add_cc_to_observer', models.IntegerField()),
                ('collect_only_unread', models.IntegerField()),
            ],
            options={
                'db_table': 'mailcollectors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Manuallinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(max_length=8096)),
                ('open_window', models.IntegerField()),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'manuallinks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Manufacturers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'manufacturers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monitormodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.DecimalField(decimal_places=2, max_digits=5)),
                ('have_micro', models.IntegerField()),
                ('have_speaker', models.IntegerField()),
                ('have_subd', models.IntegerField()),
                ('have_bnc', models.IntegerField()),
                ('have_dvi', models.IntegerField()),
                ('have_pivot', models.IntegerField()),
                ('have_hdmi', models.IntegerField()),
                ('have_displayport', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('monitortypes_id', models.PositiveIntegerField()),
                ('monitormodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'monitors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitortypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monitortypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkaliases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('networknames_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('fqdns_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkaliases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkequipmentmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkequipmentmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ram', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('networkequipmenttypes_id', models.PositiveIntegerField()),
                ('networkequipmentmodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('cpu', models.IntegerField()),
                ('uptime', models.CharField(max_length=255)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'networkequipments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkequipmenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkequipmenttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkinterfaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkinterfaces',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networknames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('fqdns_id', models.PositiveIntegerField()),
                ('ipnetworks_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networknames',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportaggregates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('networkports_id_list', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportaggregates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportaliases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('networkports_id_alias', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportaliases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportconnectionlogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('connected', models.IntegerField()),
                ('networkports_id_source', models.PositiveIntegerField()),
                ('networkports_id_destination', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'networkportconnectionlogs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportdialups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportdialups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportethernets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('items_devicenetworkcards_id', models.PositiveIntegerField()),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('speed', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportethernets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportfiberchannels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('items_devicenetworkcards_id', models.PositiveIntegerField()),
                ('networkportfiberchanneltypes_id', models.PositiveIntegerField()),
                ('wwn', models.CharField(blank=True, max_length=16, null=True)),
                ('speed', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportfiberchannels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportfiberchanneltypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportfiberchanneltypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportlocals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportlocals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('logical_number', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('instantiation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('ifmtu', models.IntegerField()),
                ('ifspeed', models.BigIntegerField()),
                ('ifinternalstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('ifconnectionstatus', models.IntegerField()),
                ('iflastchange', models.CharField(blank=True, max_length=255, null=True)),
                ('ifinbytes', models.BigIntegerField()),
                ('ifinerrors', models.BigIntegerField()),
                ('ifoutbytes', models.BigIntegerField()),
                ('ifouterrors', models.BigIntegerField()),
                ('ifstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('ifdescr', models.CharField(blank=True, max_length=255, null=True)),
                ('ifalias', models.CharField(blank=True, max_length=255, null=True)),
                ('portduplex', models.CharField(blank=True, max_length=255, null=True)),
                ('trunk', models.IntegerField()),
                ('lastup', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkports',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkporttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('value_decimal', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_importable', models.IntegerField()),
                ('instantiation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkporttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportwifis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('items_devicenetworkcards_id', models.PositiveIntegerField()),
                ('wifinetworks_id', models.PositiveIntegerField()),
                ('networkportwifis_id', models.PositiveIntegerField()),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('mode', models.CharField(blank=True, max_length=20, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportwifis',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notepads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_lastupdater', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notepads',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('event', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('allow_response', models.IntegerField()),
            ],
            options={
                'db_table': 'notifications',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notificationtargets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('notifications_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'notificationtargets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notificationtemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('itemtype', models.CharField(max_length=100)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('css', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notificationtemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notificationtemplatetranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificationtemplates_id', models.PositiveIntegerField()),
                ('language', models.CharField(max_length=10)),
                ('subject', models.CharField(max_length=255)),
                ('content_text', models.TextField(blank=True, null=True)),
                ('content_html', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notificationtemplatetranslations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notimportedemails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_field', models.CharField(db_column='from', max_length=255)),
                ('to', models.CharField(max_length=255)),
                ('mailcollectors_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('subject', models.TextField(blank=True, null=True)),
                ('messageid', models.CharField(max_length=255)),
                ('reason', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'notimportedemails',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Olalevelactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('olalevels_id', models.PositiveIntegerField()),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'olalevelactions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Olalevelcriterias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('olalevels_id', models.PositiveIntegerField()),
                ('criteria', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.IntegerField()),
                ('pattern', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'olalevelcriterias',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Olalevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('olas_id', models.PositiveIntegerField()),
                ('execution_time', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('match', models.CharField(blank=True, max_length=10, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'olalevels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Olas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('type', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('number_time', models.IntegerField()),
                ('use_ticket_calendar', models.IntegerField()),
                ('calendars_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('definition_time', models.CharField(blank=True, max_length=255, null=True)),
                ('end_of_working_day', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('slms_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'olas',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Operatingsystemarchitectures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operatingsystemarchitectures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Operatingsystemeditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operatingsystemeditions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Operatingsystemkernels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operatingsystemkernels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Operatingsystemkernelversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operatingsystemkernels_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operatingsystemkernelversions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Operatingsystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operatingsystems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Operatingsystemservicepacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operatingsystemservicepacks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Operatingsystemversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operatingsystemversions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Passivedcequipmentmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passivedcequipmentmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Passivedcequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('passivedcequipmentmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('passivedcequipmenttypes_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passivedcequipments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Passivedcequipmenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passivedcequipmenttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pdumodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('max_power', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('is_rackable', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdumodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pdus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('pdumodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('pdutypes_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PdusPlugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plugs_id', models.PositiveIntegerField()),
                ('pdus_id', models.PositiveIntegerField()),
                ('number_plugs', models.IntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdus_plugs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PdusRacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('racks_id', models.PositiveIntegerField()),
                ('pdus_id', models.PositiveIntegerField()),
                ('side', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField()),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdus_racks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pdutypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdutypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pendingreasons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('followup_frequency', models.IntegerField()),
                ('followups_before_resolution', models.IntegerField()),
                ('itilfollowuptemplates_id', models.PositiveIntegerField()),
                ('solutiontemplates_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pendingreasons',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Peripheralmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'peripheralmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Peripherals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('peripheraltypes_id', models.PositiveIntegerField()),
                ('peripheralmodels_id', models.PositiveIntegerField()),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'peripherals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Peripheraltypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'peripheraltypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phonemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phonemodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phonepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phonepowersupplies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('phonetypes_id', models.PositiveIntegerField()),
                ('phonemodels_id', models.PositiveIntegerField()),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('phonepowersupplies_id', models.PositiveIntegerField()),
                ('number_line', models.CharField(blank=True, max_length=255, null=True)),
                ('have_headset', models.IntegerField()),
                ('have_hp', models.IntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phones',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phonetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phonetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Planningeventcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'planningeventcategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Planningexternalevents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('planningexternaleventtemplates_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_guests', models.TextField(blank=True, null=True)),
                ('groups_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('rrule', models.TextField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('planningeventcategories_id', models.PositiveIntegerField()),
                ('background', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'planningexternalevents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Planningexternaleventtemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('duration', models.IntegerField()),
                ('before_time', models.IntegerField()),
                ('rrule', models.TextField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('planningeventcategories_id', models.PositiveIntegerField()),
                ('background', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'planningexternaleventtemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Plugins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directory', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=255)),
                ('state', models.IntegerField()),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('homepage', models.CharField(blank=True, max_length=255, null=True)),
                ('license', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'plugins',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Plugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'plugs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Printermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'printermodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Printers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('have_serial', models.IntegerField()),
                ('have_parallel', models.IntegerField()),
                ('have_usb', models.IntegerField()),
                ('have_wifi', models.IntegerField()),
                ('have_ethernet', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('memory_size', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('printertypes_id', models.PositiveIntegerField()),
                ('printermodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('init_pages_counter', models.IntegerField()),
                ('last_pages_counter', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'printers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PrintersCartridgeinfos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printers_id', models.PositiveIntegerField()),
                ('property', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'printers_cartridgeinfos',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Printertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'printertypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Problemcosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('cost_time', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_fixed', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_material', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'problemcosts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Problems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('solvedate', models.DateTimeField(blank=True, null=True)),
                ('closedate', models.DateTimeField(blank=True, null=True)),
                ('time_to_resolve', models.DateTimeField(blank=True, null=True)),
                ('users_id_recipient', models.PositiveIntegerField()),
                ('users_id_lastupdater', models.PositiveIntegerField()),
                ('urgency', models.IntegerField()),
                ('impact', models.IntegerField()),
                ('priority', models.IntegerField()),
                ('itilcategories_id', models.PositiveIntegerField()),
                ('impactcontent', models.TextField(blank=True, null=True)),
                ('causecontent', models.TextField(blank=True, null=True)),
                ('symptomcontent', models.TextField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('begin_waiting_date', models.DateTimeField(blank=True, null=True)),
                ('waiting_duration', models.IntegerField()),
                ('close_delay_stat', models.IntegerField()),
                ('solve_delay_stat', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Problemtasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('problems_id', models.PositiveIntegerField()),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_editor', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('state', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('tasktemplates_id', models.PositiveIntegerField()),
                ('timeline_position', models.IntegerField()),
                ('is_private', models.IntegerField()),
            ],
            options={
                'db_table': 'problemtasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Problemtemplatepredefinedfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problemtemplatepredefinedfields',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Problemtemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'problemtemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('interface', models.CharField(blank=True, max_length=255, null=True)),
                ('is_default', models.IntegerField()),
                ('helpdesk_hardware', models.IntegerField()),
                ('helpdesk_item_type', models.TextField(blank=True, null=True)),
                ('ticket_status', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('problem_status', models.TextField(blank=True, null=True)),
                ('create_ticket_on_login', models.IntegerField()),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('change_status', models.TextField(blank=True, null=True)),
                ('managed_domainrecordtypes', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'profiles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfilesReminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'profiles_reminders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfilesRssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds_id', models.PositiveIntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'profiles_rssfeeds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProfilesUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.PositiveIntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('is_default_profile', models.IntegerField()),
            ],
            options={
                'db_table': 'profiles_users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projectcosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projects_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'projectcosts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('projects_id', models.PositiveIntegerField()),
                ('projectstates_id', models.PositiveIntegerField()),
                ('projecttypes_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('plan_start_date', models.DateTimeField(blank=True, null=True)),
                ('plan_end_date', models.DateTimeField(blank=True, null=True)),
                ('real_start_date', models.DateTimeField(blank=True, null=True)),
                ('real_end_date', models.DateTimeField(blank=True, null=True)),
                ('percent_done', models.IntegerField()),
                ('auto_percent_done', models.IntegerField()),
                ('show_on_global_gantt', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('projecttemplates_id', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'projects',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projectstates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('is_finished', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projectstates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projecttasklinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projecttasks_id_source', models.PositiveIntegerField()),
                ('source_uuid', models.CharField(max_length=255)),
                ('projecttasks_id_target', models.PositiveIntegerField()),
                ('target_uuid', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
                ('lag', models.SmallIntegerField(blank=True, null=True)),
                ('lead', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projecttasklinks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projecttasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('projects_id', models.PositiveIntegerField()),
                ('projecttasks_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('plan_start_date', models.DateTimeField(blank=True, null=True)),
                ('plan_end_date', models.DateTimeField(blank=True, null=True)),
                ('real_start_date', models.DateTimeField(blank=True, null=True)),
                ('real_end_date', models.DateTimeField(blank=True, null=True)),
                ('planned_duration', models.IntegerField()),
                ('effective_duration', models.IntegerField()),
                ('projectstates_id', models.PositiveIntegerField()),
                ('projecttasktypes_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('percent_done', models.IntegerField()),
                ('auto_percent_done', models.IntegerField()),
                ('is_milestone', models.IntegerField()),
                ('projecttasktemplates_id', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'projecttasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projecttasktemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('projects_id', models.PositiveIntegerField()),
                ('projecttasks_id', models.PositiveIntegerField()),
                ('plan_start_date', models.DateTimeField(blank=True, null=True)),
                ('plan_end_date', models.DateTimeField(blank=True, null=True)),
                ('real_start_date', models.DateTimeField(blank=True, null=True)),
                ('real_end_date', models.DateTimeField(blank=True, null=True)),
                ('planned_duration', models.IntegerField()),
                ('effective_duration', models.IntegerField()),
                ('projectstates_id', models.PositiveIntegerField()),
                ('projecttasktypes_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('percent_done', models.IntegerField()),
                ('is_milestone', models.IntegerField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projecttasktemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projecttasktypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projecttasktypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projecttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projecttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Queuednotifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('notificationtemplates_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('sent_try', models.IntegerField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('send_time', models.DateTimeField(blank=True, null=True)),
                ('sent_time', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('sender', models.TextField(blank=True, null=True)),
                ('sendername', models.TextField(blank=True, null=True)),
                ('recipient', models.TextField(blank=True, null=True)),
                ('recipientname', models.TextField(blank=True, null=True)),
                ('replyto', models.TextField(blank=True, null=True)),
                ('replytoname', models.TextField(blank=True, null=True)),
                ('headers', models.TextField(blank=True, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('body_text', models.TextField(blank=True, null=True)),
                ('messageid', models.TextField(blank=True, null=True)),
                ('documents', models.TextField(blank=True, null=True)),
                ('mode', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'queuednotifications',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rackmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rackmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Racks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('rackmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('racktypes_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('depth', models.IntegerField(blank=True, null=True)),
                ('number_units', models.IntegerField(blank=True, null=True)),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('dcrooms_id', models.PositiveIntegerField()),
                ('room_orientation', models.IntegerField()),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('max_power', models.IntegerField()),
                ('mesured_power', models.IntegerField()),
                ('max_weight', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'racks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Racktypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'racktypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recurrentchanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('periodicity', models.CharField(blank=True, max_length=255, null=True)),
                ('create_before', models.IntegerField()),
                ('next_creation_date', models.DateTimeField(blank=True, null=True)),
                ('calendars_id', models.PositiveIntegerField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recurrentchanges',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Refusedequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('rules_id', models.PositiveIntegerField()),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('agents_id', models.PositiveIntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'refusedequipments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Registeredids',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('device_type', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'registeredids',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('is_planned', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('begin_view_date', models.DateTimeField(blank=True, null=True)),
                ('end_view_date', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reminders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RemindersUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'reminders_users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Remindertranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('language', models.CharField(blank=True, max_length=5, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'remindertranslations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Requesttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_helpdesk_default', models.IntegerField()),
                ('is_followup_default', models.IntegerField()),
                ('is_mail_default', models.IntegerField()),
                ('is_mailfollowup_default', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('is_ticketheader', models.IntegerField()),
                ('is_itilfollowup', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'requesttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reservations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservationitems_id', models.PositiveIntegerField()),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('group', models.IntegerField()),
            ],
            options={
                'db_table': 'reservations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('refresh_rate', models.IntegerField()),
                ('max_items', models.IntegerField()),
                ('have_error', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rssfeeds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RssfeedsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'rssfeeds_users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ruleactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules_id', models.PositiveIntegerField()),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ruleactions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rulecriterias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules_id', models.PositiveIntegerField()),
                ('criteria', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.IntegerField()),
                ('pattern', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rulecriterias',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rulematchedlogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('rules_id', models.PositiveIntegerField(blank=True, null=True)),
                ('agents_id', models.PositiveIntegerField()),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'rulematchedlogs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rulerightparameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rulerightparameters',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('sub_type', models.CharField(max_length=255)),
                ('ranking', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('match', models.CharField(blank=True, max_length=10, null=True)),
                ('is_active', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rules',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Savedsearches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('users_id', models.PositiveIntegerField()),
                ('is_private', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('query', models.TextField(blank=True, null=True)),
                ('last_execution_time', models.IntegerField(blank=True, null=True)),
                ('do_count', models.IntegerField()),
                ('last_execution_date', models.DateTimeField(blank=True, null=True)),
                ('counter', models.IntegerField()),
            ],
            options={
                'db_table': 'savedsearches',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Slalevelactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slalevels_id', models.PositiveIntegerField()),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'slalevelactions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Slalevelcriterias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slalevels_id', models.PositiveIntegerField()),
                ('criteria', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.IntegerField()),
                ('pattern', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'slalevelcriterias',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Slalevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('slas_id', models.PositiveIntegerField()),
                ('execution_time', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('match', models.CharField(blank=True, max_length=10, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'slalevels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Slas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('type', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('number_time', models.IntegerField()),
                ('use_ticket_calendar', models.IntegerField()),
                ('calendars_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('definition_time', models.CharField(blank=True, max_length=255, null=True)),
                ('end_of_working_day', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('slms_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'slas',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Slms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('use_ticket_calendar', models.IntegerField()),
                ('calendars_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'slms',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Snmpcredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('snmpversion', models.CharField(max_length=8)),
                ('community', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('authentication', models.CharField(blank=True, max_length=255, null=True)),
                ('auth_passphrase', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption', models.CharField(blank=True, max_length=255, null=True)),
                ('priv_passphrase', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'snmpcredentials',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Socketmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'socketmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sockets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('socketmodels_id', models.PositiveIntegerField()),
                ('wiring_side', models.IntegerField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('networkports_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sockets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwarecategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('softwarecategories_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'softwarecategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwarelicenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('softwares_id', models.PositiveIntegerField()),
                ('softwarelicenses_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('number', models.IntegerField()),
                ('softwarelicensetypes_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('softwareversions_id_buy', models.PositiveIntegerField()),
                ('softwareversions_id_use', models.PositiveIntegerField()),
                ('expire', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('is_valid', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('is_helpdesk_visible', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('allow_overquota', models.IntegerField()),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'softwarelicenses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwarelicensetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('softwarelicensetypes_id', models.PositiveIntegerField()),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'softwarelicensetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_update', models.IntegerField()),
                ('softwares_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_helpdesk_visible', models.IntegerField()),
                ('softwarecategories_id', models.PositiveIntegerField()),
                ('is_valid', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'softwares',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwareversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('softwares_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('arch', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('operatingsystems_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'softwareversions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solutiontemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('solutiontypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'solutiontemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solutiontypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'solutiontypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ssovariables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ssovariables',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('suppliertypes_id', models.PositiveIntegerField()),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'suppliers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Suppliertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'suppliertypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Taskcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('is_helpdeskvisible', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('knowbaseitemcategories_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'taskcategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tasktemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('actiontime', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('is_private', models.IntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tasktemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticketcosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('cost_time', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_fixed', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_material', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'ticketcosts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticketrecurrents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('periodicity', models.CharField(blank=True, max_length=255, null=True)),
                ('create_before', models.IntegerField()),
                ('next_creation_date', models.DateTimeField(blank=True, null=True)),
                ('calendars_id', models.PositiveIntegerField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticketrecurrents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('closedate', models.DateTimeField(blank=True, null=True)),
                ('solvedate', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id_lastupdater', models.PositiveIntegerField()),
                ('status', models.IntegerField()),
                ('users_id_recipient', models.PositiveIntegerField()),
                ('requesttypes_id', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('urgency', models.IntegerField()),
                ('impact', models.IntegerField()),
                ('priority', models.IntegerField()),
                ('itilcategories_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('global_validation', models.IntegerField()),
                ('slas_id_ttr', models.PositiveIntegerField()),
                ('slas_id_tto', models.PositiveIntegerField()),
                ('slalevels_id_ttr', models.PositiveIntegerField()),
                ('time_to_resolve', models.DateTimeField(blank=True, null=True)),
                ('time_to_own', models.DateTimeField(blank=True, null=True)),
                ('begin_waiting_date', models.DateTimeField(blank=True, null=True)),
                ('sla_waiting_duration', models.IntegerField()),
                ('ola_waiting_duration', models.IntegerField()),
                ('olas_id_tto', models.PositiveIntegerField()),
                ('olas_id_ttr', models.PositiveIntegerField()),
                ('olalevels_id_ttr', models.PositiveIntegerField()),
                ('ola_ttr_begin_date', models.DateTimeField(blank=True, null=True)),
                ('internal_time_to_resolve', models.DateTimeField(blank=True, null=True)),
                ('internal_time_to_own', models.DateTimeField(blank=True, null=True)),
                ('waiting_duration', models.IntegerField()),
                ('close_delay_stat', models.IntegerField()),
                ('solve_delay_stat', models.IntegerField()),
                ('takeintoaccount_delay_stat', models.IntegerField()),
                ('actiontime', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('validation_percent', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tickets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticketsatisfactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField(unique=True)),
                ('type', models.IntegerField()),
                ('date_begin', models.DateTimeField(blank=True, null=True)),
                ('date_answered', models.DateTimeField(blank=True, null=True)),
                ('satisfaction', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticketsatisfactions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tickettasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('tickets_id', models.PositiveIntegerField()),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_editor', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('is_private', models.IntegerField()),
                ('actiontime', models.IntegerField()),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('tasktemplates_id', models.PositiveIntegerField()),
                ('timeline_position', models.IntegerField()),
                ('sourceitems_id', models.PositiveIntegerField()),
                ('sourceof_items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tickettasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tickettemplatepredefinedfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tickettemplatepredefinedfields',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tickettemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tickettemplates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticketvalidations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
                ('users_id_validate', models.PositiveIntegerField()),
                ('comment_submission', models.TextField(blank=True, null=True)),
                ('comment_validation', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('validation_date', models.DateTimeField(blank=True, null=True)),
                ('timeline_position', models.IntegerField()),
            ],
            options={
                'db_table': 'ticketvalidations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Transfers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('keep_ticket', models.IntegerField()),
                ('keep_networklink', models.IntegerField()),
                ('keep_reservation', models.IntegerField()),
                ('keep_history', models.IntegerField()),
                ('keep_device', models.IntegerField()),
                ('keep_infocom', models.IntegerField()),
                ('keep_dc_monitor', models.IntegerField()),
                ('clean_dc_monitor', models.IntegerField()),
                ('keep_dc_phone', models.IntegerField()),
                ('clean_dc_phone', models.IntegerField()),
                ('keep_dc_peripheral', models.IntegerField()),
                ('clean_dc_peripheral', models.IntegerField()),
                ('keep_dc_printer', models.IntegerField()),
                ('clean_dc_printer', models.IntegerField()),
                ('keep_supplier', models.IntegerField()),
                ('clean_supplier', models.IntegerField()),
                ('keep_contact', models.IntegerField()),
                ('clean_contact', models.IntegerField()),
                ('keep_contract', models.IntegerField()),
                ('clean_contract', models.IntegerField()),
                ('keep_software', models.IntegerField()),
                ('clean_software', models.IntegerField()),
                ('keep_document', models.IntegerField()),
                ('clean_document', models.IntegerField()),
                ('keep_cartridgeitem', models.IntegerField()),
                ('clean_cartridgeitem', models.IntegerField()),
                ('keep_cartridge', models.IntegerField()),
                ('keep_consumable', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('keep_disk', models.IntegerField()),
                ('keep_certificate', models.IntegerField()),
                ('clean_certificate', models.IntegerField()),
            ],
            options={
                'db_table': 'transfers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Unmanageds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('domains_id', models.PositiveIntegerField()),
                ('agents_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('accepted', models.IntegerField()),
                ('hub', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'unmanageds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Usercategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'usercategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Usertitles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'usertitles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Virtualmachinestates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'virtualmachinestates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Virtualmachinesystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'virtualmachinesystems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Virtualmachinetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'virtualmachinetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('tag', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vlans',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Wifinetworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('essid', models.CharField(blank=True, max_length=255, null=True)),
                ('mode', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wifinetworks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vobjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('data', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vobjects',
                'managed': True,
                'unique_together': {('itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('password_last_update', models.DateTimeField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('realname', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('use_mode', models.IntegerField()),
                ('list_limit', models.IntegerField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('auths_id', models.PositiveIntegerField()),
                ('authtype', models.IntegerField()),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_sync', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('usertitles_id', models.PositiveIntegerField()),
                ('usercategories_id', models.PositiveIntegerField()),
                ('date_format', models.IntegerField(blank=True, null=True)),
                ('number_format', models.IntegerField(blank=True, null=True)),
                ('names_format', models.IntegerField(blank=True, null=True)),
                ('csv_delimiter', models.CharField(blank=True, max_length=1, null=True)),
                ('is_ids_visible', models.IntegerField(blank=True, null=True)),
                ('use_flat_dropdowntree', models.IntegerField(blank=True, null=True)),
                ('show_jobs_at_login', models.IntegerField(blank=True, null=True)),
                ('priority_1', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_2', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_3', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_4', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_5', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_6', models.CharField(blank=True, max_length=20, null=True)),
                ('followup_private', models.IntegerField(blank=True, null=True)),
                ('task_private', models.IntegerField(blank=True, null=True)),
                ('default_requesttypes_id', models.PositiveIntegerField(blank=True, null=True)),
                ('password_forget_token', models.CharField(blank=True, max_length=40, null=True)),
                ('password_forget_token_date', models.DateTimeField(blank=True, null=True)),
                ('user_dn', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('show_count_on_tabs', models.IntegerField(blank=True, null=True)),
                ('refresh_views', models.IntegerField(blank=True, null=True)),
                ('set_default_tech', models.IntegerField(blank=True, null=True)),
                ('personal_token', models.CharField(blank=True, max_length=255, null=True)),
                ('personal_token_date', models.DateTimeField(blank=True, null=True)),
                ('api_token', models.CharField(blank=True, max_length=255, null=True)),
                ('api_token_date', models.DateTimeField(blank=True, null=True)),
                ('cookie_token', models.CharField(blank=True, max_length=255, null=True)),
                ('cookie_token_date', models.DateTimeField(blank=True, null=True)),
                ('display_count_on_home', models.IntegerField(blank=True, null=True)),
                ('notification_to_myself', models.IntegerField(blank=True, null=True)),
                ('duedateok_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatewarning_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatecritical_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatewarning_less', models.IntegerField(blank=True, null=True)),
                ('duedatecritical_less', models.IntegerField(blank=True, null=True)),
                ('duedatewarning_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatecritical_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('display_options', models.TextField(blank=True, null=True)),
                ('is_deleted_ldap', models.IntegerField()),
                ('pdffont', models.CharField(blank=True, max_length=255, null=True)),
                ('picture', models.CharField(blank=True, max_length=255, null=True)),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('keep_devices_when_purging_item', models.IntegerField(blank=True, null=True)),
                ('privatebookmarkorder', models.TextField(blank=True, null=True)),
                ('backcreated', models.IntegerField(blank=True, null=True)),
                ('task_state', models.IntegerField(blank=True, null=True)),
                ('palette', models.CharField(blank=True, max_length=20, null=True)),
                ('page_layout', models.CharField(blank=True, max_length=20, null=True)),
                ('fold_menu', models.IntegerField(blank=True, null=True)),
                ('fold_search', models.IntegerField(blank=True, null=True)),
                ('savedsearches_pinned', models.TextField(blank=True, null=True)),
                ('timeline_order', models.CharField(blank=True, max_length=20, null=True)),
                ('itil_layout', models.TextField(blank=True, null=True)),
                ('richtext_layout', models.CharField(blank=True, max_length=20, null=True)),
                ('set_default_requester', models.IntegerField(blank=True, null=True)),
                ('lock_autolock_mode', models.IntegerField(blank=True, null=True)),
                ('lock_directunlock_notification', models.IntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('highcontrast_css', models.IntegerField(blank=True, null=True)),
                ('plannings', models.TextField(blank=True, null=True)),
                ('sync_field', models.CharField(blank=True, max_length=255, null=True)),
                ('groups_id', models.PositiveIntegerField()),
                ('users_id_supervisor', models.PositiveIntegerField()),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('default_dashboard_central', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_assets', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_helpdesk', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_mini_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('default_central_tab', models.IntegerField(blank=True, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
                'unique_together': {('name', 'authtype', 'auths_id')},
            },
        ),
        migrations.CreateModel(
            name='Useremails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.PositiveIntegerField()),
                ('is_default', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'useremails',
                'managed': True,
                'unique_together': {('users_id', 'email')},
            },
        ),
        migrations.CreateModel(
            name='Usbvendors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('vendorid', models.CharField(max_length=4)),
                ('deviceid', models.CharField(blank=True, max_length=4, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'usbvendors',
                'managed': True,
                'unique_together': {('vendorid', 'deviceid')},
            },
        ),
        migrations.CreateModel(
            name='Tickettemplatemandatoryfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'tickettemplatemandatoryfields',
                'managed': True,
                'unique_together': {('tickettemplates_id', 'num')},
            },
        ),
        migrations.CreateModel(
            name='Tickettemplatehiddenfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'tickettemplatehiddenfields',
                'managed': True,
                'unique_together': {('tickettemplates_id', 'num')},
            },
        ),
        migrations.CreateModel(
            name='TicketsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tickets_users',
                'managed': True,
                'unique_together': {('tickets_id', 'type', 'users_id', 'alternative_email')},
            },
        ),
        migrations.CreateModel(
            name='TicketsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id_1', models.PositiveIntegerField()),
                ('tickets_id_2', models.PositiveIntegerField()),
                ('link', models.IntegerField()),
            ],
            options={
                'db_table': 'tickets_tickets',
                'managed': True,
                'unique_together': {('tickets_id_1', 'tickets_id_2')},
            },
        ),
        migrations.CreateModel(
            name='TicketsContracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('contracts_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tickets_contracts',
                'managed': True,
                'unique_together': {('tickets_id', 'contracts_id')},
            },
        ),
        migrations.CreateModel(
            name='SuppliersTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('suppliers_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'suppliers_tickets',
                'managed': True,
                'unique_together': {('tickets_id', 'type', 'suppliers_id')},
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_visible_computer', models.IntegerField()),
                ('is_visible_monitor', models.IntegerField()),
                ('is_visible_networkequipment', models.IntegerField()),
                ('is_visible_peripheral', models.IntegerField()),
                ('is_visible_phone', models.IntegerField()),
                ('is_visible_printer', models.IntegerField()),
                ('is_visible_softwareversion', models.IntegerField()),
                ('is_visible_softwarelicense', models.IntegerField()),
                ('is_visible_line', models.IntegerField()),
                ('is_visible_certificate', models.IntegerField()),
                ('is_visible_rack', models.IntegerField()),
                ('is_visible_passivedcequipment', models.IntegerField()),
                ('is_visible_enclosure', models.IntegerField()),
                ('is_visible_pdu', models.IntegerField()),
                ('is_visible_cluster', models.IntegerField()),
                ('is_visible_contract', models.IntegerField()),
                ('is_visible_appliance', models.IntegerField()),
                ('is_visible_databaseinstance', models.IntegerField()),
                ('is_visible_cable', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'states',
                'managed': True,
                'unique_together': {('states_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SlalevelsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('slalevels_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'slalevels_tickets',
                'managed': True,
                'unique_together': {('tickets_id', 'slalevels_id')},
            },
        ),
        migrations.CreateModel(
            name='SavedsearchesUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('savedsearches_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'savedsearches_users',
                'managed': True,
                'unique_together': {('users_id', 'itemtype')},
            },
        ),
        migrations.CreateModel(
            name='SavedsearchesAlerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('savedsearches_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField()),
                ('operator', models.IntegerField()),
                ('value', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('frequency', models.IntegerField()),
            ],
            options={
                'db_table': 'savedsearches_alerts',
                'managed': True,
                'unique_together': {('savedsearches_id', 'operator', 'value')},
            },
        ),
        migrations.CreateModel(
            name='Reservationitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
            ],
            options={
                'db_table': 'reservationitems',
                'managed': True,
                'unique_together': {('itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='Projectteams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projects_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'projectteams',
                'managed': True,
                'unique_together': {('projects_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='Projecttaskteams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projecttasks_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'projecttaskteams',
                'managed': True,
                'unique_together': {('projecttasks_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='ProjecttasksTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('projecttasks_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'projecttasks_tickets',
                'managed': True,
                'unique_together': {('tickets_id', 'projecttasks_id')},
            },
        ),
        migrations.CreateModel(
            name='Profilerights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profiles_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('rights', models.IntegerField()),
            ],
            options={
                'db_table': 'profilerights',
                'managed': True,
                'unique_together': {('profiles_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Problemtemplatemandatoryfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'problemtemplatemandatoryfields',
                'managed': True,
                'unique_together': {('problemtemplates_id', 'num')},
            },
        ),
        migrations.CreateModel(
            name='Problemtemplatehiddenfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'problemtemplatehiddenfields',
                'managed': True,
                'unique_together': {('problemtemplates_id', 'num')},
            },
        ),
        migrations.CreateModel(
            name='ProblemsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'problems_users',
                'managed': True,
                'unique_together': {('problems_id', 'type', 'users_id', 'alternative_email')},
            },
        ),
        migrations.CreateModel(
            name='ProblemsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'problems_tickets',
                'managed': True,
                'unique_together': {('problems_id', 'tickets_id')},
            },
        ),
        migrations.CreateModel(
            name='ProblemsSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('suppliers_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'problems_suppliers',
                'managed': True,
                'unique_together': {('problems_id', 'type', 'suppliers_id')},
            },
        ),
        migrations.CreateModel(
            name='Printerlogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printers_id', models.PositiveIntegerField()),
                ('total_pages', models.IntegerField()),
                ('bw_pages', models.IntegerField()),
                ('color_pages', models.IntegerField()),
                ('rv_pages', models.IntegerField()),
                ('prints', models.IntegerField()),
                ('bw_prints', models.IntegerField()),
                ('color_prints', models.IntegerField()),
                ('copies', models.IntegerField()),
                ('bw_copies', models.IntegerField()),
                ('color_copies', models.IntegerField()),
                ('scanned', models.IntegerField()),
                ('date', models.DateField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('faxed', models.IntegerField()),
            ],
            options={
                'db_table': 'printerlogs',
                'managed': True,
                'unique_together': {('printers_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Planningrecalls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('users_id', models.PositiveIntegerField()),
                ('before_time', models.IntegerField()),
                ('when', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'planningrecalls',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'users_id')},
            },
        ),
        migrations.CreateModel(
            name='PendingreasonsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pendingreasons_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('followup_frequency', models.IntegerField()),
                ('followups_before_resolution', models.IntegerField()),
                ('bump_count', models.IntegerField()),
                ('last_bump_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pendingreasons_items',
                'managed': True,
                'unique_together': {('items_id', 'itemtype')},
            },
        ),
        migrations.CreateModel(
            name='Pcivendors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('vendorid', models.CharField(max_length=4)),
                ('deviceid', models.CharField(blank=True, max_length=4, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcivendors',
                'managed': True,
                'unique_together': {('vendorid', 'deviceid')},
            },
        ),
        migrations.CreateModel(
            name='OlalevelsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('olalevels_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'olalevels_tickets',
                'managed': True,
                'unique_together': {('tickets_id', 'olalevels_id')},
            },
        ),
        migrations.CreateModel(
            name='Objectlocks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'objectlocks',
                'managed': True,
                'unique_together': {('itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='NotificationsNotificationtemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notifications_id', models.PositiveIntegerField()),
                ('mode', models.CharField(max_length=20)),
                ('notificationtemplates_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'notifications_notificationtemplates',
                'managed': True,
                'unique_together': {('notifications_id', 'mode', 'notificationtemplates_id')},
            },
        ),
        migrations.CreateModel(
            name='NetworkportsVlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField()),
                ('vlans_id', models.PositiveIntegerField()),
                ('tagged', models.IntegerField()),
            ],
            options={
                'db_table': 'networkports_vlans',
                'managed': True,
                'unique_together': {('networkports_id', 'vlans_id')},
            },
        ),
        migrations.CreateModel(
            name='NetworkportsNetworkports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id_1', models.PositiveIntegerField()),
                ('networkports_id_2', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'networkports_networkports',
                'managed': True,
                'unique_together': {('networkports_id_1', 'networkports_id_2')},
            },
        ),
        migrations.CreateModel(
            name='Networkportmetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('ifinbytes', models.BigIntegerField()),
                ('ifinerrors', models.BigIntegerField()),
                ('ifoutbytes', models.BigIntegerField()),
                ('ifouterrors', models.BigIntegerField()),
                ('networkports_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportmetrics',
                'managed': True,
                'unique_together': {('networkports_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Lockedfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('field', models.CharField(max_length=50)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_global', models.IntegerField()),
            ],
            options={
                'db_table': 'lockedfields',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'field')},
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('building', models.CharField(blank=True, max_length=255, null=True)),
                ('room', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'locations',
                'managed': True,
                'unique_together': {('entities_id', 'locations_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='LinksItemtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('links_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'links_itemtypes',
                'managed': True,
                'unique_together': {('itemtype', 'links_id')},
            },
        ),
        migrations.CreateModel(
            name='Lineoperators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('mcc', models.IntegerField(blank=True, null=True)),
                ('mnc', models.IntegerField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lineoperators',
                'managed': True,
                'unique_together': {('mcc', 'mnc')},
            },
        ),
        migrations.CreateModel(
            name='KnowbaseitemsRevisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('revision', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'knowbaseitems_revisions',
                'managed': True,
                'unique_together': {('knowbaseitems_id', 'revision', 'language')},
            },
        ),
        migrations.CreateModel(
            name='KnowbaseitemsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'knowbaseitems_items',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'knowbaseitems_id')},
            },
        ),
        migrations.CreateModel(
            name='Knowbaseitemcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('knowbaseitemcategories_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'knowbaseitemcategories',
                'managed': True,
                'unique_together': {('entities_id', 'knowbaseitemcategories_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ItilsProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('projects_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'itils_projects',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'projects_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_tickets',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'tickets_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsSoftwareversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('softwareversions_id', models.PositiveIntegerField()),
                ('is_deleted_item', models.IntegerField()),
                ('is_template_item', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_install', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'items_softwareversions',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'softwareversions_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsRacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('racks_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=255)),
                ('items_id', models.PositiveIntegerField()),
                ('position', models.IntegerField()),
                ('orientation', models.IntegerField(blank=True, null=True)),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('hpos', models.IntegerField()),
                ('is_reserved', models.IntegerField()),
            ],
            options={
                'db_table': 'items_racks',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'is_reserved')},
            },
        ),
        migrations.CreateModel(
            name='ItemsProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projects_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_projects',
                'managed': True,
                'unique_together': {('projects_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsProblems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_problems',
                'managed': True,
                'unique_together': {('problems_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsOperatingsystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('operatingsystems_id', models.PositiveIntegerField()),
                ('operatingsystemversions_id', models.PositiveIntegerField()),
                ('operatingsystemservicepacks_id', models.PositiveIntegerField()),
                ('operatingsystemarchitectures_id', models.PositiveIntegerField()),
                ('operatingsystemkernelversions_id', models.PositiveIntegerField()),
                ('license_number', models.CharField(blank=True, max_length=255, null=True)),
                ('licenseid', models.CharField(blank=True, max_length=255, null=True)),
                ('operatingsystemeditions_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'items_operatingsystems',
                'managed': True,
                'unique_together': {('items_id', 'itemtype', 'operatingsystems_id', 'operatingsystemarchitectures_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsKanbans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('state', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'items_kanbans',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'users_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsEnclosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enclosures_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=255)),
                ('items_id', models.PositiveIntegerField()),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'items_enclosures',
                'managed': True,
                'unique_together': {('itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsClusters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clusters_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'items_clusters',
                'managed': True,
                'unique_together': {('clusters_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='IpnetworksVlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipnetworks_id', models.PositiveIntegerField()),
                ('vlans_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'ipnetworks_vlans',
                'managed': True,
                'unique_together': {('ipnetworks_id', 'vlans_id')},
            },
        ),
        migrations.CreateModel(
            name='IpaddressesIpnetworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipaddresses_id', models.PositiveIntegerField()),
                ('ipnetworks_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'ipaddresses_ipnetworks',
                'managed': True,
                'unique_together': {('ipaddresses_id', 'ipnetworks_id')},
            },
        ),
        migrations.CreateModel(
            name='Infocoms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('buy_date', models.DateField(blank=True, null=True)),
                ('use_date', models.DateField(blank=True, null=True)),
                ('warranty_duration', models.IntegerField()),
                ('warranty_info', models.CharField(blank=True, max_length=255, null=True)),
                ('suppliers_id', models.PositiveIntegerField()),
                ('order_number', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_number', models.CharField(blank=True, max_length=255, null=True)),
                ('immo_number', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.DecimalField(decimal_places=4, max_digits=20)),
                ('warranty_value', models.DecimalField(decimal_places=4, max_digits=20)),
                ('sink_time', models.IntegerField()),
                ('sink_type', models.IntegerField()),
                ('sink_coeff', models.FloatField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('bill', models.CharField(blank=True, max_length=255, null=True)),
                ('budgets_id', models.PositiveIntegerField()),
                ('alert', models.IntegerField()),
                ('order_date', models.DateField(blank=True, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('inventory_date', models.DateField(blank=True, null=True)),
                ('warranty_date', models.DateField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('decommission_date', models.DateTimeField(blank=True, null=True)),
                ('businesscriticities_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'infocoms',
                'managed': True,
                'unique_together': {('itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='Impactrelations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype_source', models.CharField(max_length=255)),
                ('items_id_source', models.PositiveIntegerField()),
                ('itemtype_impacted', models.CharField(max_length=255)),
                ('items_id_impacted', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'impactrelations',
                'managed': True,
                'unique_together': {('itemtype_source', 'items_id_source', 'itemtype_impacted', 'items_id_impacted')},
            },
        ),
        migrations.CreateModel(
            name='Impactitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=255)),
                ('items_id', models.PositiveIntegerField()),
                ('parent_id', models.PositiveIntegerField()),
                ('impactcontexts_id', models.PositiveIntegerField()),
                ('is_slave', models.IntegerField()),
            ],
            options={
                'db_table': 'impactitems',
                'managed': True,
                'unique_together': {('itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='GroupsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('is_manager', models.IntegerField()),
                ('is_userdelegate', models.IntegerField()),
            ],
            options={
                'db_table': 'groups_users',
                'managed': True,
                'unique_together': {('users_id', 'groups_id')},
            },
        ),
        migrations.CreateModel(
            name='GroupsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'groups_tickets',
                'managed': True,
                'unique_together': {('tickets_id', 'type', 'groups_id')},
            },
        ),
        migrations.CreateModel(
            name='GroupsProblems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'groups_problems',
                'managed': True,
                'unique_together': {('problems_id', 'type', 'groups_id')},
            },
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_email', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('from_email', models.CharField(blank=True, max_length=255, null=True)),
                ('from_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('noreply_email', models.CharField(blank=True, max_length=255, null=True)),
                ('noreply_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('replyto_email', models.CharField(blank=True, max_length=255, null=True)),
                ('replyto_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_subject_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('ldap_dn', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('authldaps_id', models.PositiveIntegerField()),
                ('mail_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_ldapfilter', models.TextField(blank=True, null=True)),
                ('mailing_signature', models.TextField(blank=True, null=True)),
                ('cartridges_alert_repeat', models.IntegerField()),
                ('consumables_alert_repeat', models.IntegerField()),
                ('use_licenses_alert', models.IntegerField()),
                ('send_licenses_alert_before_delay', models.IntegerField()),
                ('use_certificates_alert', models.IntegerField()),
                ('send_certificates_alert_before_delay', models.IntegerField()),
                ('certificates_alert_repeat_interval', models.IntegerField()),
                ('use_contracts_alert', models.IntegerField()),
                ('send_contracts_alert_before_delay', models.IntegerField()),
                ('use_infocoms_alert', models.IntegerField()),
                ('send_infocoms_alert_before_delay', models.IntegerField()),
                ('use_reservations_alert', models.IntegerField()),
                ('use_domains_alert', models.IntegerField()),
                ('send_domains_alert_close_expiries_delay', models.IntegerField()),
                ('send_domains_alert_expired_delay', models.IntegerField()),
                ('autoclose_delay', models.IntegerField()),
                ('autopurge_delay', models.IntegerField()),
                ('notclosed_delay', models.IntegerField()),
                ('calendars_strategy', models.IntegerField()),
                ('calendars_id', models.PositiveIntegerField()),
                ('auto_assign_mode', models.IntegerField()),
                ('tickettype', models.IntegerField()),
                ('max_closedate', models.DateTimeField(blank=True, null=True)),
                ('inquest_config', models.IntegerField()),
                ('inquest_rate', models.IntegerField()),
                ('inquest_delay', models.IntegerField()),
                ('inquest_url', models.CharField(blank=True, db_column='inquest_URL', max_length=255, null=True)),
                ('autofill_warranty_date', models.CharField(max_length=255)),
                ('autofill_use_date', models.CharField(max_length=255)),
                ('autofill_buy_date', models.CharField(max_length=255)),
                ('autofill_delivery_date', models.CharField(max_length=255)),
                ('autofill_order_date', models.CharField(max_length=255)),
                ('tickettemplates_strategy', models.IntegerField()),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('changetemplates_strategy', models.IntegerField()),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('problemtemplates_strategy', models.IntegerField()),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('entities_strategy_software', models.IntegerField()),
                ('entities_id_software', models.PositiveIntegerField()),
                ('default_contract_alert', models.IntegerField()),
                ('default_infocom_alert', models.IntegerField()),
                ('default_cartridges_alarm_threshold', models.IntegerField()),
                ('default_consumables_alarm_threshold', models.IntegerField()),
                ('delay_send_emails', models.IntegerField()),
                ('is_notif_enable_default', models.IntegerField()),
                ('inquest_duration', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autofill_decommission_date', models.CharField(max_length=255)),
                ('suppliers_as_private', models.IntegerField()),
                ('anonymize_support_agents', models.IntegerField()),
                ('display_users_initials', models.IntegerField()),
                ('contracts_strategy_default', models.IntegerField()),
                ('contracts_id_default', models.PositiveIntegerField()),
                ('enable_custom_css', models.IntegerField()),
                ('custom_css_code', models.TextField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, max_length=255, null=True)),
                ('transfers_strategy', models.IntegerField()),
                ('transfers_id', models.PositiveIntegerField()),
                ('agent_base_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'entities',
                'managed': True,
                'unique_together': {('entities_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Dropdowntranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('field', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dropdowntranslations',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'language', 'field')},
            },
        ),
        migrations.CreateModel(
            name='DomainsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domains_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('domainrelations_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'domains_items',
                'managed': True,
                'unique_together': {('domains_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='DocumentsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documents_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField(blank=True, null=True)),
                ('timeline_position', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'documents_items',
                'managed': True,
                'unique_together': {('documents_id', 'itemtype', 'items_id', 'timeline_position')},
            },
        ),
        migrations.CreateModel(
            name='Documentcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('documentcategories_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'documentcategories',
                'managed': True,
                'unique_together': {('documentcategories_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Displaypreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('num', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'displaypreferences',
                'managed': True,
                'unique_together': {('users_id', 'itemtype', 'num')},
            },
        ),
        migrations.CreateModel(
            name='DashboardsRights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboards_dashboards_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'dashboards_rights',
                'managed': True,
                'unique_together': {('dashboards_dashboards_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='Crontasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=150)),
                ('frequency', models.IntegerField()),
                ('param', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('mode', models.IntegerField()),
                ('allowmode', models.IntegerField()),
                ('hourmin', models.IntegerField()),
                ('hourmax', models.IntegerField()),
                ('logs_lifetime', models.IntegerField()),
                ('lastrun', models.DateTimeField(blank=True, null=True)),
                ('lastcode', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crontasks',
                'managed': True,
                'unique_together': {('itemtype', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ContractsSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suppliers_id', models.PositiveIntegerField()),
                ('contracts_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'contracts_suppliers',
                'managed': True,
                'unique_together': {('suppliers_id', 'contracts_id')},
            },
        ),
        migrations.CreateModel(
            name='ContractsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contracts_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'contracts_items',
                'managed': True,
                'unique_together': {('contracts_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='ContactsSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suppliers_id', models.PositiveIntegerField()),
                ('contacts_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'contacts_suppliers',
                'managed': True,
                'unique_together': {('suppliers_id', 'contacts_id')},
            },
        ),
        migrations.CreateModel(
            name='Configs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.CharField(blank=True, max_length=150, null=True)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'configs',
                'managed': True,
                'unique_together': {('context', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Changetemplatemandatoryfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'changetemplatemandatoryfields',
                'managed': True,
                'unique_together': {('changetemplates_id', 'num')},
            },
        ),
        migrations.CreateModel(
            name='Changetemplatehiddenfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'changetemplatehiddenfields',
                'managed': True,
                'unique_together': {('changetemplates_id', 'num')},
            },
        ),
        migrations.CreateModel(
            name='ChangesUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'changes_users',
                'managed': True,
                'unique_together': {('changes_id', 'type', 'users_id', 'alternative_email')},
            },
        ),
        migrations.CreateModel(
            name='ChangesTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'changes_tickets',
                'managed': True,
                'unique_together': {('changes_id', 'tickets_id')},
            },
        ),
        migrations.CreateModel(
            name='ChangesSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('suppliers_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'changes_suppliers',
                'managed': True,
                'unique_together': {('changes_id', 'type', 'suppliers_id')},
            },
        ),
        migrations.CreateModel(
            name='ChangesProblems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('problems_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'changes_problems',
                'managed': True,
                'unique_together': {('changes_id', 'problems_id')},
            },
        ),
        migrations.CreateModel(
            name='ChangesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'changes_items',
                'managed': True,
                'unique_together': {('changes_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='ChangesGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'changes_groups',
                'managed': True,
                'unique_together': {('changes_id', 'type', 'groups_id')},
            },
        ),
        migrations.CreateModel(
            name='CertificatesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificates_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certificates_items',
                'managed': True,
                'unique_together': {('certificates_id', 'itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='CartridgeitemsPrintermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cartridgeitems_id', models.PositiveIntegerField()),
                ('printermodels_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'cartridgeitems_printermodels',
                'managed': True,
                'unique_together': {('printermodels_id', 'cartridgeitems_id')},
            },
        ),
        migrations.CreateModel(
            name='CalendarsHolidays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendars_id', models.PositiveIntegerField()),
                ('holidays_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'calendars_holidays',
                'managed': True,
                'unique_together': {('calendars_id', 'holidays_id')},
            },
        ),
        migrations.CreateModel(
            name='Businesscriticities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('businesscriticities_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'businesscriticities',
                'managed': True,
                'unique_together': {('businesscriticities_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AppliancesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliances_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'appliances_items',
                'managed': True,
                'unique_together': {('appliances_id', 'items_id', 'itemtype')},
            },
        ),
        migrations.CreateModel(
            name='Alerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'alerts',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'type')},
            },
        ),
    ]
