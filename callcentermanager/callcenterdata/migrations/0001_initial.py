# Generated by Django 4.0.5 on 2022-08-26 23:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GlpiAgents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.CharField(max_length=255, unique=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('agenttypes_id', models.PositiveIntegerField()),
                ('last_contact', models.DateTimeField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('locked', models.IntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('useragent', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.CharField(blank=True, max_length=6, null=True)),
                ('threads_networkdiscovery', models.IntegerField()),
                ('threads_networkinventory', models.IntegerField()),
                ('timeout_networkdiscovery', models.IntegerField()),
                ('timeout_networkinventory', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_agents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAgenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_agenttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAlerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'glpi_alerts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiApiclients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('ipv4_range_start', models.BigIntegerField(blank=True, null=True)),
                ('ipv4_range_end', models.BigIntegerField(blank=True, null=True)),
                ('ipv6', models.CharField(blank=True, max_length=255, null=True)),
                ('app_token', models.CharField(blank=True, max_length=255, null=True)),
                ('app_token_date', models.DateTimeField(blank=True, null=True)),
                ('dolog_method', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_apiclients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiApplianceenvironments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_applianceenvironments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAppliances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('is_deleted', models.IntegerField()),
                ('appliancetypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('applianceenvironments_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('externalidentifier', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_helpdesk_visible', models.IntegerField()),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_appliances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAppliancesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliances_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'glpi_appliances_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAppliancesItemsRelations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliances_items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_appliances_items_relations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAppliancetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('externalidentifier', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'glpi_appliancetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAuthldapreplicates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authldaps_id', models.PositiveIntegerField()),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('timeout', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_authldapreplicates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAuthldaps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('basedn', models.CharField(blank=True, max_length=255, null=True)),
                ('rootdn', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField()),
                ('condition', models.TextField(blank=True, null=True)),
                ('login_field', models.CharField(blank=True, max_length=255, null=True)),
                ('sync_field', models.CharField(blank=True, max_length=255, null=True)),
                ('use_tls', models.IntegerField()),
                ('group_field', models.CharField(blank=True, max_length=255, null=True)),
                ('group_condition', models.TextField(blank=True, null=True)),
                ('group_search_type', models.IntegerField()),
                ('group_member_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email1_field', models.CharField(blank=True, max_length=255, null=True)),
                ('realname_field', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname_field', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_field', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2_field', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_field', models.CharField(blank=True, max_length=255, null=True)),
                ('comment_field', models.CharField(blank=True, max_length=255, null=True)),
                ('use_dn', models.IntegerField()),
                ('time_offset', models.IntegerField()),
                ('deref_option', models.IntegerField()),
                ('title_field', models.CharField(blank=True, max_length=255, null=True)),
                ('category_field', models.CharField(blank=True, max_length=255, null=True)),
                ('language_field', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_field', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_condition', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_default', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('rootdn_passwd', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email2_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email3_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email4_field', models.CharField(blank=True, max_length=255, null=True)),
                ('location_field', models.CharField(blank=True, max_length=255, null=True)),
                ('responsible_field', models.CharField(blank=True, max_length=255, null=True)),
                ('pagesize', models.IntegerField()),
                ('ldap_maxlimit', models.IntegerField()),
                ('can_support_pagesize', models.IntegerField()),
                ('picture_field', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('inventory_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('tls_certfile', models.TextField(blank=True, null=True)),
                ('tls_keyfile', models.TextField(blank=True, null=True)),
                ('use_bind', models.IntegerField()),
                ('timeout', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_authldaps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAuthmails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('connect_string', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_authmails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiAutoupdatesystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_autoupdatesystems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiBlacklistedmailcontents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_blacklistedmailcontents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiBlacklists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_blacklists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiBudgets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('value', models.DecimalField(decimal_places=4, max_digits=20)),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('budgettypes_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_budgets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiBudgettypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_budgettypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiBusinesscriticities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('businesscriticities_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_businesscriticities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('itemtype_endpoint_a', models.CharField(blank=True, max_length=255, null=True)),
                ('itemtype_endpoint_b', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id_endpoint_a', models.PositiveIntegerField()),
                ('items_id_endpoint_b', models.PositiveIntegerField()),
                ('socketmodels_id_endpoint_a', models.PositiveIntegerField()),
                ('socketmodels_id_endpoint_b', models.PositiveIntegerField()),
                ('sockets_id_endpoint_a', models.PositiveIntegerField()),
                ('sockets_id_endpoint_b', models.PositiveIntegerField()),
                ('cablestrands_id', models.PositiveIntegerField()),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('cabletypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_cables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCablestrands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_cablestrands',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCabletypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_cabletypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCalendars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('cache_duration', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_calendars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCalendarsegments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendars_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('day', models.IntegerField()),
                ('begin', models.TimeField(blank=True, null=True)),
                ('end', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_calendarsegments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCalendarsHolidays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendars_id', models.PositiveIntegerField()),
                ('holidays_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_calendars_holidays',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCartridgeitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('cartridgeitemtypes_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('alarm_threshold', models.IntegerField()),
                ('stock_target', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_cartridgeitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCartridgeitemsPrintermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cartridgeitems_id', models.PositiveIntegerField()),
                ('printermodels_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_cartridgeitems_printermodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCartridgeitemtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_cartridgeitemtypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCartridges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('cartridgeitems_id', models.PositiveIntegerField()),
                ('printers_id', models.PositiveIntegerField()),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_use', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('pages', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_cartridges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCertificates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('certificatetypes_id', models.PositiveIntegerField()),
                ('dns_name', models.CharField(blank=True, max_length=255, null=True)),
                ('dns_suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('is_autosign', models.IntegerField()),
                ('date_expiration', models.DateField(blank=True, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('command', models.TextField(blank=True, null=True)),
                ('certificate_request', models.TextField(blank=True, null=True)),
                ('certificate_item', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_certificates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCertificatesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificates_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_certificates_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCertificatetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_certificatetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangecosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('cost_time', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_fixed', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_material', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_changecosts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('solvedate', models.DateTimeField(blank=True, null=True)),
                ('closedate', models.DateTimeField(blank=True, null=True)),
                ('time_to_resolve', models.DateTimeField(blank=True, null=True)),
                ('users_id_recipient', models.PositiveIntegerField()),
                ('users_id_lastupdater', models.PositiveIntegerField()),
                ('urgency', models.IntegerField()),
                ('impact', models.IntegerField()),
                ('priority', models.IntegerField()),
                ('itilcategories_id', models.PositiveIntegerField()),
                ('impactcontent', models.TextField(blank=True, null=True)),
                ('controlistcontent', models.TextField(blank=True, null=True)),
                ('rolloutplancontent', models.TextField(blank=True, null=True)),
                ('backoutplancontent', models.TextField(blank=True, null=True)),
                ('checklistcontent', models.TextField(blank=True, null=True)),
                ('global_validation', models.IntegerField()),
                ('validation_percent', models.IntegerField()),
                ('actiontime', models.IntegerField()),
                ('begin_waiting_date', models.DateTimeField(blank=True, null=True)),
                ('waiting_duration', models.IntegerField()),
                ('close_delay_stat', models.IntegerField()),
                ('solve_delay_stat', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_changes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangesGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_changes_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_changes_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangesProblems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('problems_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_changes_problems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangesSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('suppliers_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_changes_suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangesTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_changes_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangesUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_changes_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangetasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('changes_id', models.PositiveIntegerField()),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('state', models.IntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_editor', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('tasktemplates_id', models.PositiveIntegerField()),
                ('timeline_position', models.IntegerField()),
                ('is_private', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_changetasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangetemplatehiddenfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_changetemplatehiddenfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangetemplatemandatoryfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_changetemplatemandatoryfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangetemplatepredefinedfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_changetemplatepredefinedfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangetemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_changetemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiChangevalidations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('changes_id', models.PositiveIntegerField()),
                ('users_id_validate', models.PositiveIntegerField()),
                ('comment_submission', models.TextField(blank=True, null=True)),
                ('comment_validation', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('validation_date', models.DateTimeField(blank=True, null=True)),
                ('timeline_position', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_changevalidations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiClusters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('clustertypes_id', models.PositiveIntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_clusters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiClustertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_clustertypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiComputerantiviruses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('computers_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('antivirus_version', models.CharField(blank=True, max_length=255, null=True)),
                ('signature_version', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_uptodate', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_expiration', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_computerantiviruses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiComputermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_computermodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiComputers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('computermodels_id', models.PositiveIntegerField()),
                ('computertypes_id', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_computers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiComputersItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('computers_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_computers_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiComputertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_computertypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiComputervirtualmachines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('computers_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('virtualmachinestates_id', models.PositiveIntegerField()),
                ('virtualmachinesystems_id', models.PositiveIntegerField()),
                ('virtualmachinetypes_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(max_length=255)),
                ('vcpu', models.IntegerField()),
                ('ram', models.CharField(max_length=255)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_computervirtualmachines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiConfigs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.CharField(blank=True, max_length=150, null=True)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_configs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiConsumableitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('consumableitemtypes_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('alarm_threshold', models.IntegerField()),
                ('stock_target', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_consumableitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiConsumableitemtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_consumableitemtypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiConsumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('consumableitems_id', models.PositiveIntegerField()),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_consumables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('contacttypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('usertitles_id', models.PositiveIntegerField()),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_contacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiContactsSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suppliers_id', models.PositiveIntegerField()),
                ('contacts_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_contacts_suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiContacttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_contacttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiContractcosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contracts_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_contractcosts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiContracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('num', models.CharField(blank=True, max_length=255, null=True)),
                ('contracttypes_id', models.PositiveIntegerField()),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('duration', models.IntegerField()),
                ('notice', models.IntegerField()),
                ('periodicity', models.IntegerField()),
                ('billing', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('accounting_number', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('week_begin_hour', models.TimeField()),
                ('week_end_hour', models.TimeField()),
                ('saturday_begin_hour', models.TimeField()),
                ('saturday_end_hour', models.TimeField()),
                ('use_saturday', models.IntegerField()),
                ('sunday_begin_hour', models.TimeField()),
                ('sunday_end_hour', models.TimeField()),
                ('use_sunday', models.IntegerField()),
                ('max_links_allowed', models.IntegerField()),
                ('alert', models.IntegerField()),
                ('renewal', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_template', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_contracts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiContractsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contracts_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'glpi_contracts_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiContractsSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suppliers_id', models.PositiveIntegerField()),
                ('contracts_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_contracts_suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiContracttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_contracttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCrontasklogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crontasks_id', models.PositiveIntegerField()),
                ('crontasklogs_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('state', models.IntegerField()),
                ('elapsed', models.FloatField()),
                ('volume', models.IntegerField()),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_crontasklogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiCrontasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=150)),
                ('frequency', models.IntegerField()),
                ('param', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('mode', models.IntegerField()),
                ('allowmode', models.IntegerField()),
                ('hourmin', models.IntegerField()),
                ('hourmax', models.IntegerField()),
                ('logs_lifetime', models.IntegerField()),
                ('lastrun', models.DateTimeField(blank=True, null=True)),
                ('lastcode', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_crontasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDashboardsDashboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('context', models.CharField(max_length=100)),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_dashboards_dashboards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDashboardsFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboards_dashboards_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('filter', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_dashboards_filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDashboardsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboards_dashboards_id', models.PositiveIntegerField()),
                ('gridstack_id', models.CharField(max_length=100)),
                ('card_id', models.CharField(max_length=100)),
                ('x', models.IntegerField(blank=True, null=True)),
                ('y', models.IntegerField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('card_options', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_dashboards_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDashboardsRights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboards_dashboards_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_dashboards_rights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDatabaseinstancecategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_databaseinstancecategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDatabaseinstances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=255)),
                ('port', models.CharField(max_length=10)),
                ('path', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
                ('databaseinstancetypes_id', models.PositiveIntegerField()),
                ('databaseinstancecategories_id', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('is_onbackup', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_helpdesk_visible', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_lastboot', models.DateTimeField(blank=True, null=True)),
                ('date_lastbackup', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_databaseinstances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDatabaseinstancetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_databaseinstancetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDatabases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
                ('databaseinstances_id', models.PositiveIntegerField()),
                ('is_onbackup', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('date_lastbackup', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_databases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDatacenters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_datacenters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDcrooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('vis_cols', models.IntegerField(blank=True, null=True)),
                ('vis_rows', models.IntegerField(blank=True, null=True)),
                ('blueprint', models.TextField(blank=True, null=True)),
                ('datacenters_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_dcrooms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicebatteries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('voltage', models.IntegerField(blank=True, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('devicebatterytypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicebatterymodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicebatteries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicebatterymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicebatterymodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicebatterytypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicebatterytypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicecameramodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicecameramodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicecameras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('flashunit', models.IntegerField()),
                ('lensfacing', models.CharField(blank=True, max_length=255, null=True)),
                ('orientation', models.CharField(blank=True, max_length=255, null=True)),
                ('focallength', models.CharField(blank=True, max_length=255, null=True)),
                ('sensorsize', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicecameramodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('support', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicecameras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicecasemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicecasemodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicecases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecasetypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicecasemodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicecases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicecasetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicecasetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicecontrolmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicecontrolmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicecontrols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('is_raid', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('interfacetypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicecontrolmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicecontrols',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicedrivemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicedrivemodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicedrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('is_writer', models.IntegerField()),
                ('speed', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('interfacetypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicedrivemodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicedrives',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicefirmwaremodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicefirmwaremodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicefirmwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('date', models.DateField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('devicefirmwaretypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicefirmwaremodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicefirmwares',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicefirmwaretypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicefirmwaretypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicegenericmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicegenericmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicegenerics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('devicegenerictypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('devicegenericmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicegenerics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicegenerictypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicegenerictypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicegraphiccardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicegraphiccardmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicegraphiccards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('interfacetypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('memory_default', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicegraphiccardmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('chipset', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicegraphiccards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDeviceharddrivemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_deviceharddrivemodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDeviceharddrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('rpm', models.CharField(blank=True, max_length=255, null=True)),
                ('interfacetypes_id', models.PositiveIntegerField()),
                ('cache', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('capacity_default', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('deviceharddrivemodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_deviceharddrives',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicememories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('frequence', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('size_default', models.IntegerField()),
                ('devicememorytypes_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicememorymodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicememories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicememorymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicememorymodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicememorytypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicememorytypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicemotherboardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicemotherboardmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicemotherboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('chipset', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicemotherboardmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicemotherboards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicenetworkcardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicenetworkcardmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicenetworkcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('bandwidth', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('mac_default', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicenetworkcardmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicenetworkcards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicepcimodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicepcimodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicepcis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('devicenetworkcardmodels_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicepcimodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicepcis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('power', models.CharField(blank=True, max_length=255, null=True)),
                ('is_atx', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicepowersupplymodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicepowersupplies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicepowersupplymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicepowersupplymodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDeviceprocessormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_deviceprocessormodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDeviceprocessors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('frequence', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('frequency_default', models.IntegerField()),
                ('nbcores_default', models.IntegerField(blank=True, null=True)),
                ('nbthreads_default', models.IntegerField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('deviceprocessormodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_deviceprocessors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicesensormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicesensormodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicesensors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('devicesensortypes_id', models.PositiveIntegerField()),
                ('devicesensormodels_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicesensors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicesensortypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicesensortypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicesimcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('voltage', models.IntegerField(blank=True, null=True)),
                ('devicesimcardtypes_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('allow_voip', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_devicesimcards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicesimcardtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicesimcardtypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicesoundcardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_devicesoundcardmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDevicesoundcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('devicesoundcardmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_devicesoundcards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDisplaypreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('num', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_displaypreferences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDocumentcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('documentcategories_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_documentcategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('filename', models.CharField(blank=True, max_length=255, null=True)),
                ('filepath', models.CharField(blank=True, max_length=255, null=True)),
                ('documentcategories_id', models.PositiveIntegerField()),
                ('mime', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
                ('sha1sum', models.CharField(blank=True, max_length=40, null=True)),
                ('is_blacklisted', models.IntegerField()),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_documents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDocumentsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documents_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField(blank=True, null=True)),
                ('timeline_position', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_documents_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDocumenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ext', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('mime', models.CharField(blank=True, max_length=255, null=True)),
                ('is_uploadable', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_documenttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDomainrecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('data_obj', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('domains_id', models.PositiveIntegerField()),
                ('domainrecordtypes_id', models.PositiveIntegerField()),
                ('ttl', models.IntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_domainrecords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDomainrecordtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('fields', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_domainrecordtypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDomainrelations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_domainrelations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDomains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('domaintypes_id', models.PositiveIntegerField()),
                ('date_expiration', models.DateTimeField(blank=True, null=True)),
                ('date_domaincreation', models.DateTimeField(blank=True, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_domains',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDomainsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domains_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('domainrelations_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_domains_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDomaintypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_domaintypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiDropdowntranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('field', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_dropdowntranslations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiEnclosuremodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_enclosuremodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiEnclosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('enclosuremodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('orientation', models.IntegerField(blank=True, null=True)),
                ('power_supplies', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_enclosures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiEntities',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_email', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('from_email', models.CharField(blank=True, max_length=255, null=True)),
                ('from_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('noreply_email', models.CharField(blank=True, max_length=255, null=True)),
                ('noreply_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('replyto_email', models.CharField(blank=True, max_length=255, null=True)),
                ('replyto_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_subject_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('ldap_dn', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('authldaps_id', models.PositiveIntegerField()),
                ('mail_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_ldapfilter', models.TextField(blank=True, null=True)),
                ('mailing_signature', models.TextField(blank=True, null=True)),
                ('cartridges_alert_repeat', models.IntegerField()),
                ('consumables_alert_repeat', models.IntegerField()),
                ('use_licenses_alert', models.IntegerField()),
                ('send_licenses_alert_before_delay', models.IntegerField()),
                ('use_certificates_alert', models.IntegerField()),
                ('send_certificates_alert_before_delay', models.IntegerField()),
                ('certificates_alert_repeat_interval', models.IntegerField()),
                ('use_contracts_alert', models.IntegerField()),
                ('send_contracts_alert_before_delay', models.IntegerField()),
                ('use_infocoms_alert', models.IntegerField()),
                ('send_infocoms_alert_before_delay', models.IntegerField()),
                ('use_reservations_alert', models.IntegerField()),
                ('use_domains_alert', models.IntegerField()),
                ('send_domains_alert_close_expiries_delay', models.IntegerField()),
                ('send_domains_alert_expired_delay', models.IntegerField()),
                ('autoclose_delay', models.IntegerField()),
                ('autopurge_delay', models.IntegerField()),
                ('notclosed_delay', models.IntegerField()),
                ('calendars_strategy', models.IntegerField()),
                ('calendars_id', models.PositiveIntegerField()),
                ('auto_assign_mode', models.IntegerField()),
                ('tickettype', models.IntegerField()),
                ('max_closedate', models.DateTimeField(blank=True, null=True)),
                ('inquest_config', models.IntegerField()),
                ('inquest_rate', models.IntegerField()),
                ('inquest_delay', models.IntegerField()),
                ('inquest_url', models.CharField(blank=True, db_column='inquest_URL', max_length=255, null=True)),
                ('autofill_warranty_date', models.CharField(max_length=255)),
                ('autofill_use_date', models.CharField(max_length=255)),
                ('autofill_buy_date', models.CharField(max_length=255)),
                ('autofill_delivery_date', models.CharField(max_length=255)),
                ('autofill_order_date', models.CharField(max_length=255)),
                ('tickettemplates_strategy', models.IntegerField()),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('changetemplates_strategy', models.IntegerField()),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('problemtemplates_strategy', models.IntegerField()),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('entities_strategy_software', models.IntegerField()),
                ('entities_id_software', models.PositiveIntegerField()),
                ('default_contract_alert', models.IntegerField()),
                ('default_infocom_alert', models.IntegerField()),
                ('default_cartridges_alarm_threshold', models.IntegerField()),
                ('default_consumables_alarm_threshold', models.IntegerField()),
                ('delay_send_emails', models.IntegerField()),
                ('is_notif_enable_default', models.IntegerField()),
                ('inquest_duration', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autofill_decommission_date', models.CharField(max_length=255)),
                ('suppliers_as_private', models.IntegerField()),
                ('anonymize_support_agents', models.IntegerField()),
                ('display_users_initials', models.IntegerField()),
                ('contracts_strategy_default', models.IntegerField()),
                ('contracts_id_default', models.PositiveIntegerField()),
                ('enable_custom_css', models.IntegerField()),
                ('custom_css_code', models.TextField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, max_length=255, null=True)),
                ('transfers_strategy', models.IntegerField()),
                ('transfers_id', models.PositiveIntegerField()),
                ('agent_base_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_entities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiEntitiesKnowbaseitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_entities_knowbaseitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiEntitiesReminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_entities_reminders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiEntitiesRssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_entities_rssfeeds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('service', models.CharField(blank=True, max_length=255, null=True)),
                ('level', models.IntegerField()),
                ('message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiFieldblacklists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('field', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('itemtype', models.CharField(max_length=255)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_fieldblacklists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiFieldunicities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_recursive', models.IntegerField()),
                ('itemtype', models.CharField(max_length=255)),
                ('entities_id', models.PositiveIntegerField()),
                ('fields', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('action_refuse', models.IntegerField()),
                ('action_notify', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_fieldunicities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiFilesystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_filesystems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiFqdns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('fqdn', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_fqdns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('ldap_field', models.CharField(blank=True, max_length=255, null=True)),
                ('ldap_value', models.TextField(blank=True, null=True)),
                ('ldap_group_dn', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('groups_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_requester', models.IntegerField()),
                ('is_watcher', models.IntegerField()),
                ('is_assign', models.IntegerField()),
                ('is_task', models.IntegerField()),
                ('is_notify', models.IntegerField()),
                ('is_itemgroup', models.IntegerField()),
                ('is_usergroup', models.IntegerField()),
                ('is_manager', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiGroupsKnowbaseitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_groups_knowbaseitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiGroupsProblems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_groups_problems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiGroupsReminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_groups_reminders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiGroupsRssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_groups_rssfeeds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiGroupsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_groups_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiGroupsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('is_manager', models.IntegerField()),
                ('is_userdelegate', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_groups_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiHolidays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_perpetual', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_holidays',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiImageformats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_imageformats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiImageresolutions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_video', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_imageresolutions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiImpactcompounds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'glpi_impactcompounds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiImpactcontexts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positions', models.TextField()),
                ('zoom', models.FloatField()),
                ('pan_x', models.FloatField()),
                ('pan_y', models.FloatField()),
                ('impact_color', models.CharField(max_length=255)),
                ('depends_color', models.CharField(max_length=255)),
                ('impact_and_depends_color', models.CharField(max_length=255)),
                ('show_depends', models.IntegerField()),
                ('show_impact', models.IntegerField()),
                ('max_depth', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_impactcontexts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiImpactitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=255)),
                ('items_id', models.PositiveIntegerField()),
                ('parent_id', models.PositiveIntegerField()),
                ('impactcontexts_id', models.PositiveIntegerField()),
                ('is_slave', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_impactitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiImpactrelations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype_source', models.CharField(max_length=255)),
                ('items_id_source', models.PositiveIntegerField()),
                ('itemtype_impacted', models.CharField(max_length=255)),
                ('items_id_impacted', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_impactrelations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiInfocoms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('buy_date', models.DateField(blank=True, null=True)),
                ('use_date', models.DateField(blank=True, null=True)),
                ('warranty_duration', models.IntegerField()),
                ('warranty_info', models.CharField(blank=True, max_length=255, null=True)),
                ('suppliers_id', models.PositiveIntegerField()),
                ('order_number', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_number', models.CharField(blank=True, max_length=255, null=True)),
                ('immo_number', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.DecimalField(decimal_places=4, max_digits=20)),
                ('warranty_value', models.DecimalField(decimal_places=4, max_digits=20)),
                ('sink_time', models.IntegerField()),
                ('sink_type', models.IntegerField()),
                ('sink_coeff', models.FloatField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('bill', models.CharField(blank=True, max_length=255, null=True)),
                ('budgets_id', models.PositiveIntegerField()),
                ('alert', models.IntegerField()),
                ('order_date', models.DateField(blank=True, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('inventory_date', models.DateField(blank=True, null=True)),
                ('warranty_date', models.DateField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('decommission_date', models.DateTimeField(blank=True, null=True)),
                ('businesscriticities_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_infocoms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiInterfacetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_interfacetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiIpaddresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('version', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('binary_0', models.PositiveIntegerField()),
                ('binary_1', models.PositiveIntegerField()),
                ('binary_2', models.PositiveIntegerField()),
                ('binary_3', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('mainitems_id', models.PositiveIntegerField()),
                ('mainitemtype', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_ipaddresses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiIpaddressesIpnetworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipaddresses_id', models.PositiveIntegerField()),
                ('ipnetworks_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_ipaddresses_ipnetworks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiIpnetworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('ipnetworks_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('addressable', models.IntegerField()),
                ('version', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=40, null=True)),
                ('address_0', models.PositiveIntegerField()),
                ('address_1', models.PositiveIntegerField()),
                ('address_2', models.PositiveIntegerField()),
                ('address_3', models.PositiveIntegerField()),
                ('netmask', models.CharField(blank=True, max_length=40, null=True)),
                ('netmask_0', models.PositiveIntegerField()),
                ('netmask_1', models.PositiveIntegerField()),
                ('netmask_2', models.PositiveIntegerField()),
                ('netmask_3', models.PositiveIntegerField()),
                ('gateway', models.CharField(blank=True, max_length=40, null=True)),
                ('gateway_0', models.PositiveIntegerField()),
                ('gateway_1', models.PositiveIntegerField()),
                ('gateway_2', models.PositiveIntegerField()),
                ('gateway_3', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_ipnetworks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiIpnetworksVlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipnetworks_id', models.PositiveIntegerField()),
                ('vlans_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_ipnetworks_vlans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsClusters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clusters_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_clusters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicebatteries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicebatteries_id', models.PositiveIntegerField()),
                ('manufacturing_date', models.DateField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('real_capacity', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicebatteries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicecameras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecameras_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicecameras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicecamerasImageformats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_devicecameras_id', models.PositiveIntegerField()),
                ('imageformats_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicecameras_imageformats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicecamerasImageresolutions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_devicecameras_id', models.PositiveIntegerField()),
                ('imageresolutions_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicecameras_imageresolutions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicecases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecases_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicecases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicecontrols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecontrols_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicecontrols',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicedrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicedrives_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicedrives',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicefirmwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicefirmwares_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicefirmwares',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicegenerics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicegenerics_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicegenerics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicegraphiccards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicegraphiccards_id', models.PositiveIntegerField()),
                ('memory', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicegraphiccards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDeviceharddrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('deviceharddrives_id', models.PositiveIntegerField()),
                ('capacity', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_deviceharddrives',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicememories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicememories_id', models.PositiveIntegerField()),
                ('size', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicememories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicemotherboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicemotherboards_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicemotherboards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicenetworkcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicenetworkcards_id', models.PositiveIntegerField()),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicenetworkcards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicepcis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicepcis_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicepcis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicepowersupplies_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicepowersupplies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDeviceprocessors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('deviceprocessors_id', models.PositiveIntegerField()),
                ('frequency', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('nbcores', models.IntegerField(blank=True, null=True)),
                ('nbthreads', models.IntegerField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_deviceprocessors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicesensors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicesensors_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicesensors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicesimcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('devicesimcards_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('lines_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('pin', models.CharField(max_length=255)),
                ('pin2', models.CharField(max_length=255)),
                ('puk', models.CharField(max_length=255)),
                ('puk2', models.CharField(max_length=255)),
                ('msin', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'glpi_items_devicesimcards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDevicesoundcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('devicesoundcards_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_devicesoundcards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsDisks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('device', models.CharField(blank=True, max_length=255, null=True)),
                ('mountpoint', models.CharField(blank=True, max_length=255, null=True)),
                ('filesystems_id', models.PositiveIntegerField()),
                ('totalsize', models.IntegerField()),
                ('freesize', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('encryption_status', models.IntegerField()),
                ('encryption_tool', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption_algorithm', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption_type', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_items_disks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsEnclosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enclosures_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=255)),
                ('items_id', models.PositiveIntegerField()),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_enclosures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsKanbans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('state', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_items_kanbans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsOperatingsystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('operatingsystems_id', models.PositiveIntegerField()),
                ('operatingsystemversions_id', models.PositiveIntegerField()),
                ('operatingsystemservicepacks_id', models.PositiveIntegerField()),
                ('operatingsystemarchitectures_id', models.PositiveIntegerField()),
                ('operatingsystemkernelversions_id', models.PositiveIntegerField()),
                ('license_number', models.CharField(blank=True, max_length=255, null=True)),
                ('licenseid', models.CharField(blank=True, max_length=255, null=True)),
                ('operatingsystemeditions_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_operatingsystems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsProblems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_problems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projects_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsRacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('racks_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=255)),
                ('items_id', models.PositiveIntegerField()),
                ('position', models.IntegerField()),
                ('orientation', models.IntegerField(blank=True, null=True)),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('hpos', models.IntegerField()),
                ('is_reserved', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_racks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsRemotemanagements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('remoteid', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_remotemanagements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsSoftwarelicenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('softwarelicenses_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_items_softwarelicenses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsSoftwareversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('softwareversions_id', models.PositiveIntegerField()),
                ('is_deleted_item', models.IntegerField()),
                ('is_template_item', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_install', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_items_softwareversions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItemsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_items_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItilcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('itilcategories_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('knowbaseitemcategories_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_helpdeskvisible', models.IntegerField()),
                ('tickettemplates_id_incident', models.PositiveIntegerField()),
                ('tickettemplates_id_demand', models.PositiveIntegerField()),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('is_incident', models.IntegerField()),
                ('is_request', models.IntegerField()),
                ('is_problem', models.IntegerField()),
                ('is_change', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_itilcategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItilfollowups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_editor', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('is_private', models.IntegerField()),
                ('requesttypes_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('timeline_position', models.IntegerField()),
                ('sourceitems_id', models.PositiveIntegerField()),
                ('sourceof_items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_itilfollowups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItilfollowuptemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('requesttypes_id', models.PositiveIntegerField()),
                ('is_private', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_itilfollowuptemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItilsolutions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('solutiontypes_id', models.PositiveIntegerField()),
                ('solutiontype_name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_approval', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_editor', models.PositiveIntegerField()),
                ('users_id_approval', models.PositiveIntegerField()),
                ('user_name_approval', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField()),
                ('itilfollowups_id', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_itilsolutions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiItilsProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('projects_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_itils_projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitemcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('knowbaseitemcategories_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_knowbaseitemcategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('is_faq', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('view', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_knowbaseitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitemsComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('parent_comment_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_knowbaseitems_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitemsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_knowbaseitems_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitemsKnowbaseitemcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('knowbaseitemcategories_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_knowbaseitems_knowbaseitemcategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitemsProfiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_knowbaseitems_profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitemsRevisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('revision', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_knowbaseitems_revisions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitemsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_knowbaseitems_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiKnowbaseitemtranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems_id', models.PositiveIntegerField()),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_knowbaseitemtranslations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiLineoperators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('mcc', models.IntegerField(blank=True, null=True)),
                ('mnc', models.IntegerField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_lineoperators',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiLines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('caller_num', models.CharField(max_length=255)),
                ('caller_name', models.CharField(max_length=255)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('lineoperators_id', models.PositiveIntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('linetypes_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiLinetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_linetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('open_window', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiLinksItemtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('links_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'glpi_links_itemtypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('building', models.CharField(blank=True, max_length=255, null=True)),
                ('room', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiLockedfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('field', models.CharField(max_length=50)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_global', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_lockedfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype_link', models.CharField(max_length=100)),
                ('linked_action', models.IntegerField()),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('id_search_option', models.IntegerField()),
                ('old_value', models.CharField(blank=True, max_length=255, null=True)),
                ('new_value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiMailcollectors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('login', models.CharField(blank=True, max_length=255, null=True)),
                ('filesize_max', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('passwd', models.CharField(blank=True, max_length=255, null=True)),
                ('accepted', models.CharField(blank=True, max_length=255, null=True)),
                ('refused', models.CharField(blank=True, max_length=255, null=True)),
                ('errors', models.IntegerField()),
                ('use_mail_date', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('requester_field', models.IntegerField()),
                ('add_cc_to_observer', models.IntegerField()),
                ('collect_only_unread', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_mailcollectors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiManuallinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(max_length=8096)),
                ('open_window', models.IntegerField()),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_manuallinks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiManufacturers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_manufacturers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiMonitormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_monitormodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiMonitors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.DecimalField(decimal_places=2, max_digits=5)),
                ('have_micro', models.IntegerField()),
                ('have_speaker', models.IntegerField()),
                ('have_subd', models.IntegerField()),
                ('have_bnc', models.IntegerField()),
                ('have_dvi', models.IntegerField()),
                ('have_pivot', models.IntegerField()),
                ('have_hdmi', models.IntegerField()),
                ('have_displayport', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('monitortypes_id', models.PositiveIntegerField()),
                ('monitormodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_monitors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiMonitortypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_monitortypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkaliases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('networknames_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('fqdns_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkaliases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkequipmentmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkequipmentmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ram', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('networkequipmenttypes_id', models.PositiveIntegerField()),
                ('networkequipmentmodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('cpu', models.IntegerField()),
                ('uptime', models.CharField(max_length=255)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_networkequipments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkequipmenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkequipmenttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkinterfaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkinterfaces',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworknames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('fqdns_id', models.PositiveIntegerField()),
                ('ipnetworks_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networknames',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportaggregates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('networkports_id_list', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportaggregates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportaliases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('networkports_id_alias', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportaliases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportconnectionlogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('connected', models.IntegerField()),
                ('networkports_id_source', models.PositiveIntegerField()),
                ('networkports_id_destination', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_networkportconnectionlogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportdialups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportdialups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportethernets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('items_devicenetworkcards_id', models.PositiveIntegerField()),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('speed', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportethernets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportfiberchannels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('items_devicenetworkcards_id', models.PositiveIntegerField()),
                ('networkportfiberchanneltypes_id', models.PositiveIntegerField()),
                ('wwn', models.CharField(blank=True, max_length=16, null=True)),
                ('speed', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportfiberchannels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportfiberchanneltypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportfiberchanneltypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportlocals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportlocals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportmetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('ifinbytes', models.BigIntegerField()),
                ('ifinerrors', models.BigIntegerField()),
                ('ifoutbytes', models.BigIntegerField()),
                ('ifouterrors', models.BigIntegerField()),
                ('networkports_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportmetrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('logical_number', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('instantiation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('ifmtu', models.IntegerField()),
                ('ifspeed', models.BigIntegerField()),
                ('ifinternalstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('ifconnectionstatus', models.IntegerField()),
                ('iflastchange', models.CharField(blank=True, max_length=255, null=True)),
                ('ifinbytes', models.BigIntegerField()),
                ('ifinerrors', models.BigIntegerField()),
                ('ifoutbytes', models.BigIntegerField()),
                ('ifouterrors', models.BigIntegerField()),
                ('ifstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('ifdescr', models.CharField(blank=True, max_length=255, null=True)),
                ('ifalias', models.CharField(blank=True, max_length=255, null=True)),
                ('portduplex', models.CharField(blank=True, max_length=255, null=True)),
                ('trunk', models.IntegerField()),
                ('lastup', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportsNetworkports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id_1', models.PositiveIntegerField()),
                ('networkports_id_2', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_networkports_networkports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportsVlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField()),
                ('vlans_id', models.PositiveIntegerField()),
                ('tagged', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_networkports_vlans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkporttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('value_decimal', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_importable', models.IntegerField()),
                ('instantiation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkporttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworkportwifis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_id', models.PositiveIntegerField(unique=True)),
                ('items_devicenetworkcards_id', models.PositiveIntegerField()),
                ('wifinetworks_id', models.PositiveIntegerField()),
                ('networkportwifis_id', models.PositiveIntegerField()),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('mode', models.CharField(blank=True, max_length=20, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networkportwifis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNetworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_networks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNotepads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_lastupdater', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_notepads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNotifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('event', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('allow_response', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNotificationsNotificationtemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notifications_id', models.PositiveIntegerField()),
                ('mode', models.CharField(max_length=20)),
                ('notificationtemplates_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_notifications_notificationtemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNotificationtargets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('notifications_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_notificationtargets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNotificationtemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('itemtype', models.CharField(max_length=100)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('css', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_notificationtemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNotificationtemplatetranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificationtemplates_id', models.PositiveIntegerField()),
                ('language', models.CharField(max_length=10)),
                ('subject', models.CharField(max_length=255)),
                ('content_text', models.TextField(blank=True, null=True)),
                ('content_html', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_notificationtemplatetranslations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiNotimportedemails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_field', models.CharField(db_column='from', max_length=255)),
                ('to', models.CharField(max_length=255)),
                ('mailcollectors_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('subject', models.TextField(blank=True, null=True)),
                ('messageid', models.CharField(max_length=255)),
                ('reason', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_notimportedemails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiObjectlocks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('items_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'glpi_objectlocks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOlalevelactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('olalevels_id', models.PositiveIntegerField()),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_olalevelactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOlalevelcriterias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('olalevels_id', models.PositiveIntegerField()),
                ('criteria', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.IntegerField()),
                ('pattern', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_olalevelcriterias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOlalevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('olas_id', models.PositiveIntegerField()),
                ('execution_time', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('match', models.CharField(blank=True, max_length=10, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_olalevels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOlalevelsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('olalevels_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_olalevels_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOlas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('type', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('number_time', models.IntegerField()),
                ('use_ticket_calendar', models.IntegerField()),
                ('calendars_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('definition_time', models.CharField(blank=True, max_length=255, null=True)),
                ('end_of_working_day', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('slms_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_olas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOperatingsystemarchitectures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_operatingsystemarchitectures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOperatingsystemeditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_operatingsystemeditions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOperatingsystemkernels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_operatingsystemkernels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOperatingsystemkernelversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operatingsystemkernels_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_operatingsystemkernelversions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOperatingsystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_operatingsystems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOperatingsystemservicepacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_operatingsystemservicepacks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiOperatingsystemversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_operatingsystemversions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPassivedcequipmentmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_passivedcequipmentmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPassivedcequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('passivedcequipmentmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('passivedcequipmenttypes_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_passivedcequipments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPassivedcequipmenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_passivedcequipmenttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPcivendors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('vendorid', models.CharField(max_length=4)),
                ('deviceid', models.CharField(blank=True, max_length=4, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_pcivendors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPdumodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('max_power', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('is_rackable', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_pdumodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPdus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('pdumodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('pdutypes_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_pdus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPdusPlugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plugs_id', models.PositiveIntegerField()),
                ('pdus_id', models.PositiveIntegerField()),
                ('number_plugs', models.IntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_pdus_plugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPdusRacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('racks_id', models.PositiveIntegerField()),
                ('pdus_id', models.PositiveIntegerField()),
                ('side', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField()),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_pdus_racks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPdutypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_pdutypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPendingreasons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('followup_frequency', models.IntegerField()),
                ('followups_before_resolution', models.IntegerField()),
                ('itilfollowuptemplates_id', models.PositiveIntegerField()),
                ('solutiontemplates_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_pendingreasons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPendingreasonsItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pendingreasons_id', models.PositiveIntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('followup_frequency', models.IntegerField()),
                ('followups_before_resolution', models.IntegerField()),
                ('bump_count', models.IntegerField()),
                ('last_bump_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_pendingreasons_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPeripheralmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('required_units', models.IntegerField()),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField()),
                ('power_consumption', models.IntegerField()),
                ('is_half_rack', models.IntegerField()),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_peripheralmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPeripherals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('peripheraltypes_id', models.PositiveIntegerField()),
                ('peripheralmodels_id', models.PositiveIntegerField()),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_peripherals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPeripheraltypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_peripheraltypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPhonemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_phonemodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPhonepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_phonepowersupplies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPhones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('phonetypes_id', models.PositiveIntegerField()),
                ('phonemodels_id', models.PositiveIntegerField()),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('phonepowersupplies_id', models.PositiveIntegerField()),
                ('number_line', models.CharField(blank=True, max_length=255, null=True)),
                ('have_headset', models.IntegerField()),
                ('have_hp', models.IntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_phones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPhonetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_phonetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPlanningeventcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_planningeventcategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPlanningexternalevents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('planningexternaleventtemplates_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_guests', models.TextField(blank=True, null=True)),
                ('groups_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('rrule', models.TextField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('planningeventcategories_id', models.PositiveIntegerField()),
                ('background', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_planningexternalevents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPlanningexternaleventtemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('duration', models.IntegerField()),
                ('before_time', models.IntegerField()),
                ('rrule', models.TextField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('planningeventcategories_id', models.PositiveIntegerField()),
                ('background', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_planningexternaleventtemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPlanningrecalls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('users_id', models.PositiveIntegerField()),
                ('before_time', models.IntegerField()),
                ('when', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_planningrecalls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPlugins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directory', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=255)),
                ('state', models.IntegerField()),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('homepage', models.CharField(blank=True, max_length=255, null=True)),
                ('license', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_plugins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPlugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_plugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPrinterlogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printers_id', models.PositiveIntegerField()),
                ('total_pages', models.IntegerField()),
                ('bw_pages', models.IntegerField()),
                ('color_pages', models.IntegerField()),
                ('rv_pages', models.IntegerField()),
                ('prints', models.IntegerField()),
                ('bw_prints', models.IntegerField()),
                ('color_prints', models.IntegerField()),
                ('copies', models.IntegerField()),
                ('bw_copies', models.IntegerField()),
                ('color_copies', models.IntegerField()),
                ('scanned', models.IntegerField()),
                ('date', models.DateField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('faxed', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_printerlogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPrintermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_printermodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPrinters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('have_serial', models.IntegerField()),
                ('have_parallel', models.IntegerField()),
                ('have_usb', models.IntegerField()),
                ('have_wifi', models.IntegerField()),
                ('have_ethernet', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('memory_size', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('printertypes_id', models.PositiveIntegerField()),
                ('printermodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('init_pages_counter', models.IntegerField()),
                ('last_pages_counter', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_printers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPrintersCartridgeinfos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printers_id', models.PositiveIntegerField()),
                ('property', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_printers_cartridgeinfos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiPrintertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_printertypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemcosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('cost_time', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_fixed', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_material', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_problemcosts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('status', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('solvedate', models.DateTimeField(blank=True, null=True)),
                ('closedate', models.DateTimeField(blank=True, null=True)),
                ('time_to_resolve', models.DateTimeField(blank=True, null=True)),
                ('users_id_recipient', models.PositiveIntegerField()),
                ('users_id_lastupdater', models.PositiveIntegerField()),
                ('urgency', models.IntegerField()),
                ('impact', models.IntegerField()),
                ('priority', models.IntegerField()),
                ('itilcategories_id', models.PositiveIntegerField()),
                ('impactcontent', models.TextField(blank=True, null=True)),
                ('causecontent', models.TextField(blank=True, null=True)),
                ('symptomcontent', models.TextField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('begin_waiting_date', models.DateTimeField(blank=True, null=True)),
                ('waiting_duration', models.IntegerField()),
                ('close_delay_stat', models.IntegerField()),
                ('solve_delay_stat', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_problems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemsSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('suppliers_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_problems_suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_problems_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problems_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_problems_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemtasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('problems_id', models.PositiveIntegerField()),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_editor', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('state', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('tasktemplates_id', models.PositiveIntegerField()),
                ('timeline_position', models.IntegerField()),
                ('is_private', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_problemtasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemtemplatehiddenfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_problemtemplatehiddenfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemtemplatemandatoryfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_problemtemplatemandatoryfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemtemplatepredefinedfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_problemtemplatepredefinedfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProblemtemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_problemtemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProfilerights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profiles_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('rights', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_profilerights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProfiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('interface', models.CharField(blank=True, max_length=255, null=True)),
                ('is_default', models.IntegerField()),
                ('helpdesk_hardware', models.IntegerField()),
                ('helpdesk_item_type', models.TextField(blank=True, null=True)),
                ('ticket_status', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('problem_status', models.TextField(blank=True, null=True)),
                ('create_ticket_on_login', models.IntegerField()),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('problemtemplates_id', models.PositiveIntegerField()),
                ('change_status', models.TextField(blank=True, null=True)),
                ('managed_domainrecordtypes', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProfilesReminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_profiles_reminders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProfilesRssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds_id', models.PositiveIntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('no_entity_restriction', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_profiles_rssfeeds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProfilesUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.PositiveIntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('is_default_profile', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_profiles_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjectcosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projects_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_projectcosts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('projects_id', models.PositiveIntegerField()),
                ('projectstates_id', models.PositiveIntegerField()),
                ('projecttypes_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('plan_start_date', models.DateTimeField(blank=True, null=True)),
                ('plan_end_date', models.DateTimeField(blank=True, null=True)),
                ('real_start_date', models.DateTimeField(blank=True, null=True)),
                ('real_end_date', models.DateTimeField(blank=True, null=True)),
                ('percent_done', models.IntegerField()),
                ('auto_percent_done', models.IntegerField()),
                ('show_on_global_gantt', models.IntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('projecttemplates_id', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjectstates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('is_finished', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_projectstates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjecttasklinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projecttasks_id_source', models.PositiveIntegerField()),
                ('source_uuid', models.CharField(max_length=255)),
                ('projecttasks_id_target', models.PositiveIntegerField()),
                ('target_uuid', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
                ('lag', models.SmallIntegerField(blank=True, null=True)),
                ('lead', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_projecttasklinks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjecttasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('projects_id', models.PositiveIntegerField()),
                ('projecttasks_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('plan_start_date', models.DateTimeField(blank=True, null=True)),
                ('plan_end_date', models.DateTimeField(blank=True, null=True)),
                ('real_start_date', models.DateTimeField(blank=True, null=True)),
                ('real_end_date', models.DateTimeField(blank=True, null=True)),
                ('planned_duration', models.IntegerField()),
                ('effective_duration', models.IntegerField()),
                ('projectstates_id', models.PositiveIntegerField()),
                ('projecttasktypes_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('percent_done', models.IntegerField()),
                ('auto_percent_done', models.IntegerField()),
                ('is_milestone', models.IntegerField()),
                ('projecttasktemplates_id', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_projecttasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjecttasksTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('projecttasks_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_projecttasks_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjecttaskteams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projecttasks_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_projecttaskteams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjecttasktemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('projects_id', models.PositiveIntegerField()),
                ('projecttasks_id', models.PositiveIntegerField()),
                ('plan_start_date', models.DateTimeField(blank=True, null=True)),
                ('plan_end_date', models.DateTimeField(blank=True, null=True)),
                ('real_start_date', models.DateTimeField(blank=True, null=True)),
                ('real_end_date', models.DateTimeField(blank=True, null=True)),
                ('planned_duration', models.IntegerField()),
                ('effective_duration', models.IntegerField()),
                ('projectstates_id', models.PositiveIntegerField()),
                ('projecttasktypes_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('percent_done', models.IntegerField()),
                ('is_milestone', models.IntegerField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_projecttasktemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjecttasktypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_projecttasktypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjectteams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projects_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_projectteams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiProjecttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_projecttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiQueuednotifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('notificationtemplates_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('sent_try', models.IntegerField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('send_time', models.DateTimeField(blank=True, null=True)),
                ('sent_time', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('sender', models.TextField(blank=True, null=True)),
                ('sendername', models.TextField(blank=True, null=True)),
                ('recipient', models.TextField(blank=True, null=True)),
                ('recipientname', models.TextField(blank=True, null=True)),
                ('replyto', models.TextField(blank=True, null=True)),
                ('replytoname', models.TextField(blank=True, null=True)),
                ('headers', models.TextField(blank=True, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('body_text', models.TextField(blank=True, null=True)),
                ('messageid', models.TextField(blank=True, null=True)),
                ('documents', models.TextField(blank=True, null=True)),
                ('mode', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'glpi_queuednotifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRackmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_rackmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('rackmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('racktypes_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('depth', models.IntegerField(blank=True, null=True)),
                ('number_units', models.IntegerField(blank=True, null=True)),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('dcrooms_id', models.PositiveIntegerField()),
                ('room_orientation', models.IntegerField()),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('max_power', models.IntegerField()),
                ('mesured_power', models.IntegerField()),
                ('max_weight', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_racks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRacktypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_racktypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRecurrentchanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('changetemplates_id', models.PositiveIntegerField()),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('periodicity', models.CharField(blank=True, max_length=255, null=True)),
                ('create_before', models.IntegerField()),
                ('next_creation_date', models.DateTimeField(blank=True, null=True)),
                ('calendars_id', models.PositiveIntegerField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_recurrentchanges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRefusedequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('rules_id', models.PositiveIntegerField()),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('agents_id', models.PositiveIntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_refusedequipments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRegisteredids',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('device_type', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'glpi_registeredids',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiReminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('is_planned', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('begin_view_date', models.DateTimeField(blank=True, null=True)),
                ('end_view_date', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_reminders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRemindersUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_reminders_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRemindertranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders_id', models.PositiveIntegerField()),
                ('language', models.CharField(blank=True, max_length=5, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_remindertranslations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRequesttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_helpdesk_default', models.IntegerField()),
                ('is_followup_default', models.IntegerField()),
                ('is_mail_default', models.IntegerField()),
                ('is_mailfollowup_default', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('is_ticketheader', models.IntegerField()),
                ('is_itilfollowup', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_requesttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiReservationitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('items_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_reservationitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiReservations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservationitems_id', models.PositiveIntegerField()),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('group', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_reservations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('refresh_rate', models.IntegerField()),
                ('max_items', models.IntegerField()),
                ('have_error', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_rssfeeds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRssfeedsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_rssfeeds_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRuleactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules_id', models.PositiveIntegerField()),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_ruleactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRulecriterias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules_id', models.PositiveIntegerField()),
                ('criteria', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.IntegerField()),
                ('pattern', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_rulecriterias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRulematchedlogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('rules_id', models.PositiveIntegerField(blank=True, null=True)),
                ('agents_id', models.PositiveIntegerField()),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_rulematchedlogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRulerightparameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_rulerightparameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('sub_type', models.CharField(max_length=255)),
                ('ranking', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('match', models.CharField(blank=True, max_length=10, null=True)),
                ('is_active', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_rules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSavedsearches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('users_id', models.PositiveIntegerField()),
                ('is_private', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('query', models.TextField(blank=True, null=True)),
                ('last_execution_time', models.IntegerField(blank=True, null=True)),
                ('do_count', models.IntegerField()),
                ('last_execution_date', models.DateTimeField(blank=True, null=True)),
                ('counter', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_savedsearches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSavedsearchesAlerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('savedsearches_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField()),
                ('operator', models.IntegerField()),
                ('value', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('frequency', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_savedsearches_alerts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSavedsearchesUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(max_length=100)),
                ('savedsearches_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_savedsearches_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSlalevelactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slalevels_id', models.PositiveIntegerField()),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('field', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_slalevelactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSlalevelcriterias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slalevels_id', models.PositiveIntegerField()),
                ('criteria', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.IntegerField()),
                ('pattern', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_slalevelcriterias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSlalevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('slas_id', models.PositiveIntegerField()),
                ('execution_time', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('match', models.CharField(blank=True, max_length=10, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_slalevels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSlalevelsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('slalevels_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_slalevels_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSlas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('type', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('number_time', models.IntegerField()),
                ('use_ticket_calendar', models.IntegerField()),
                ('calendars_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('definition_time', models.CharField(blank=True, max_length=255, null=True)),
                ('end_of_working_day', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('slms_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_slas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSlms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('use_ticket_calendar', models.IntegerField()),
                ('calendars_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_slms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSnmpcredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('snmpversion', models.CharField(max_length=8)),
                ('community', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('authentication', models.CharField(blank=True, max_length=255, null=True)),
                ('auth_passphrase', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption', models.CharField(blank=True, max_length=255, null=True)),
                ('priv_passphrase', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_snmpcredentials',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSocketmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_socketmodels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSockets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('socketmodels_id', models.PositiveIntegerField()),
                ('wiring_side', models.IntegerField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('networkports_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_sockets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSoftwarecategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('softwarecategories_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_softwarecategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSoftwarelicenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('softwares_id', models.PositiveIntegerField()),
                ('softwarelicenses_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('number', models.IntegerField()),
                ('softwarelicensetypes_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('softwareversions_id_buy', models.PositiveIntegerField()),
                ('softwareversions_id_use', models.PositiveIntegerField()),
                ('expire', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('is_valid', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('is_helpdesk_visible', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('allow_overquota', models.IntegerField()),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_softwarelicenses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSoftwarelicensetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('softwarelicensetypes_id', models.PositiveIntegerField()),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_softwarelicensetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSoftwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_update', models.IntegerField()),
                ('softwares_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_helpdesk_visible', models.IntegerField()),
                ('softwarecategories_id', models.PositiveIntegerField()),
                ('is_valid', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_softwares',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSoftwareversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('softwares_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('arch', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('operatingsystems_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_softwareversions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSolutiontemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('solutiontypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_solutiontemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSolutiontypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_solutiontypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSsovariables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_ssovariables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiStates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_visible_computer', models.IntegerField()),
                ('is_visible_monitor', models.IntegerField()),
                ('is_visible_networkequipment', models.IntegerField()),
                ('is_visible_peripheral', models.IntegerField()),
                ('is_visible_phone', models.IntegerField()),
                ('is_visible_printer', models.IntegerField()),
                ('is_visible_softwareversion', models.IntegerField()),
                ('is_visible_softwarelicense', models.IntegerField()),
                ('is_visible_line', models.IntegerField()),
                ('is_visible_certificate', models.IntegerField()),
                ('is_visible_rack', models.IntegerField()),
                ('is_visible_passivedcequipment', models.IntegerField()),
                ('is_visible_enclosure', models.IntegerField()),
                ('is_visible_pdu', models.IntegerField()),
                ('is_visible_cluster', models.IntegerField()),
                ('is_visible_contract', models.IntegerField()),
                ('is_visible_appliance', models.IntegerField()),
                ('is_visible_databaseinstance', models.IntegerField()),
                ('is_visible_cable', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('suppliertypes_id', models.PositiveIntegerField()),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSuppliersTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('suppliers_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_suppliers_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiSuppliertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_suppliertypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTaskcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('is_helpdeskvisible', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('knowbaseitemcategories_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_taskcategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTasktemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('actiontime', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('is_private', models.IntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_tasktemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTicketcosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('begin_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('actiontime', models.IntegerField()),
                ('cost_time', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_fixed', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_material', models.DecimalField(decimal_places=4, max_digits=20)),
                ('budgets_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_ticketcosts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTicketrecurrents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('periodicity', models.CharField(blank=True, max_length=255, null=True)),
                ('create_before', models.IntegerField()),
                ('next_creation_date', models.DateTimeField(blank=True, null=True)),
                ('calendars_id', models.PositiveIntegerField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_ticketrecurrents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('closedate', models.DateTimeField(blank=True, null=True)),
                ('solvedate', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id_lastupdater', models.PositiveIntegerField()),
                ('status', models.IntegerField()),
                ('users_id_recipient', models.PositiveIntegerField()),
                ('requesttypes_id', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('urgency', models.IntegerField()),
                ('impact', models.IntegerField()),
                ('priority', models.IntegerField()),
                ('itilcategories_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('global_validation', models.IntegerField()),
                ('slas_id_ttr', models.PositiveIntegerField()),
                ('slas_id_tto', models.PositiveIntegerField()),
                ('slalevels_id_ttr', models.PositiveIntegerField()),
                ('time_to_resolve', models.DateTimeField(blank=True, null=True)),
                ('time_to_own', models.DateTimeField(blank=True, null=True)),
                ('begin_waiting_date', models.DateTimeField(blank=True, null=True)),
                ('sla_waiting_duration', models.IntegerField()),
                ('ola_waiting_duration', models.IntegerField()),
                ('olas_id_tto', models.PositiveIntegerField()),
                ('olas_id_ttr', models.PositiveIntegerField()),
                ('olalevels_id_ttr', models.PositiveIntegerField()),
                ('ola_ttr_begin_date', models.DateTimeField(blank=True, null=True)),
                ('internal_time_to_resolve', models.DateTimeField(blank=True, null=True)),
                ('internal_time_to_own', models.DateTimeField(blank=True, null=True)),
                ('waiting_duration', models.IntegerField()),
                ('close_delay_stat', models.IntegerField()),
                ('solve_delay_stat', models.IntegerField()),
                ('takeintoaccount_delay_stat', models.IntegerField()),
                ('actiontime', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('validation_percent', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTicketsatisfactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField(unique=True)),
                ('type', models.IntegerField()),
                ('date_begin', models.DateTimeField(blank=True, null=True)),
                ('date_answered', models.DateTimeField(blank=True, null=True)),
                ('satisfaction', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_ticketsatisfactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTicketsContracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('contracts_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_tickets_contracts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTicketsTickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id_1', models.PositiveIntegerField()),
                ('tickets_id_2', models.PositiveIntegerField()),
                ('link', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_tickets_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTicketsUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('use_notification', models.IntegerField()),
                ('alternative_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_tickets_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTickettasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('tickets_id', models.PositiveIntegerField()),
                ('taskcategories_id', models.PositiveIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('users_id_editor', models.PositiveIntegerField()),
                ('content', models.TextField(blank=True, null=True)),
                ('is_private', models.IntegerField()),
                ('actiontime', models.IntegerField()),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('state', models.IntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('tasktemplates_id', models.PositiveIntegerField()),
                ('timeline_position', models.IntegerField()),
                ('sourceitems_id', models.PositiveIntegerField()),
                ('sourceof_items_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_tickettasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTickettemplatehiddenfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_tickettemplatehiddenfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTickettemplatemandatoryfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_tickettemplatemandatoryfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTickettemplatepredefinedfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickettemplates_id', models.PositiveIntegerField()),
                ('num', models.IntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_tickettemplatepredefinedfields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTickettemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_tickettemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTicketvalidations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('tickets_id', models.PositiveIntegerField()),
                ('users_id_validate', models.PositiveIntegerField()),
                ('comment_submission', models.TextField(blank=True, null=True)),
                ('comment_validation', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('validation_date', models.DateTimeField(blank=True, null=True)),
                ('timeline_position', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_ticketvalidations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiTransfers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('keep_ticket', models.IntegerField()),
                ('keep_networklink', models.IntegerField()),
                ('keep_reservation', models.IntegerField()),
                ('keep_history', models.IntegerField()),
                ('keep_device', models.IntegerField()),
                ('keep_infocom', models.IntegerField()),
                ('keep_dc_monitor', models.IntegerField()),
                ('clean_dc_monitor', models.IntegerField()),
                ('keep_dc_phone', models.IntegerField()),
                ('clean_dc_phone', models.IntegerField()),
                ('keep_dc_peripheral', models.IntegerField()),
                ('clean_dc_peripheral', models.IntegerField()),
                ('keep_dc_printer', models.IntegerField()),
                ('clean_dc_printer', models.IntegerField()),
                ('keep_supplier', models.IntegerField()),
                ('clean_supplier', models.IntegerField()),
                ('keep_contact', models.IntegerField()),
                ('clean_contact', models.IntegerField()),
                ('keep_contract', models.IntegerField()),
                ('clean_contract', models.IntegerField()),
                ('keep_software', models.IntegerField()),
                ('clean_software', models.IntegerField()),
                ('keep_document', models.IntegerField()),
                ('clean_document', models.IntegerField()),
                ('keep_cartridgeitem', models.IntegerField()),
                ('clean_cartridgeitem', models.IntegerField()),
                ('keep_cartridge', models.IntegerField()),
                ('keep_consumable', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('keep_disk', models.IntegerField()),
                ('keep_certificate', models.IntegerField()),
                ('clean_certificate', models.IntegerField()),
            ],
            options={
                'db_table': 'glpi_transfers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiUnmanageds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('domains_id', models.PositiveIntegerField()),
                ('agents_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('accepted', models.IntegerField()),
                ('hub', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'glpi_unmanageds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiUsbvendors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('vendorid', models.CharField(max_length=4)),
                ('deviceid', models.CharField(blank=True, max_length=4, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_usbvendors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiUsercategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_usercategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiUseremails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.PositiveIntegerField()),
                ('is_default', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_useremails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('password_last_update', models.DateTimeField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('realname', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('use_mode', models.IntegerField()),
                ('list_limit', models.IntegerField(blank=True, null=True)),
                ('is_active', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('auths_id', models.PositiveIntegerField()),
                ('authtype', models.IntegerField()),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_sync', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('profiles_id', models.PositiveIntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('usertitles_id', models.PositiveIntegerField()),
                ('usercategories_id', models.PositiveIntegerField()),
                ('date_format', models.IntegerField(blank=True, null=True)),
                ('number_format', models.IntegerField(blank=True, null=True)),
                ('names_format', models.IntegerField(blank=True, null=True)),
                ('csv_delimiter', models.CharField(blank=True, max_length=1, null=True)),
                ('is_ids_visible', models.IntegerField(blank=True, null=True)),
                ('use_flat_dropdowntree', models.IntegerField(blank=True, null=True)),
                ('show_jobs_at_login', models.IntegerField(blank=True, null=True)),
                ('priority_1', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_2', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_3', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_4', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_5', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_6', models.CharField(blank=True, max_length=20, null=True)),
                ('followup_private', models.IntegerField(blank=True, null=True)),
                ('task_private', models.IntegerField(blank=True, null=True)),
                ('default_requesttypes_id', models.PositiveIntegerField(blank=True, null=True)),
                ('password_forget_token', models.CharField(blank=True, max_length=40, null=True)),
                ('password_forget_token_date', models.DateTimeField(blank=True, null=True)),
                ('user_dn', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('show_count_on_tabs', models.IntegerField(blank=True, null=True)),
                ('refresh_views', models.IntegerField(blank=True, null=True)),
                ('set_default_tech', models.IntegerField(blank=True, null=True)),
                ('personal_token', models.CharField(blank=True, max_length=255, null=True)),
                ('personal_token_date', models.DateTimeField(blank=True, null=True)),
                ('api_token', models.CharField(blank=True, max_length=255, null=True)),
                ('api_token_date', models.DateTimeField(blank=True, null=True)),
                ('cookie_token', models.CharField(blank=True, max_length=255, null=True)),
                ('cookie_token_date', models.DateTimeField(blank=True, null=True)),
                ('display_count_on_home', models.IntegerField(blank=True, null=True)),
                ('notification_to_myself', models.IntegerField(blank=True, null=True)),
                ('duedateok_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatewarning_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatecritical_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatewarning_less', models.IntegerField(blank=True, null=True)),
                ('duedatecritical_less', models.IntegerField(blank=True, null=True)),
                ('duedatewarning_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatecritical_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('display_options', models.TextField(blank=True, null=True)),
                ('is_deleted_ldap', models.IntegerField()),
                ('pdffont', models.CharField(blank=True, max_length=255, null=True)),
                ('picture', models.CharField(blank=True, max_length=255, null=True)),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('keep_devices_when_purging_item', models.IntegerField(blank=True, null=True)),
                ('privatebookmarkorder', models.TextField(blank=True, null=True)),
                ('backcreated', models.IntegerField(blank=True, null=True)),
                ('task_state', models.IntegerField(blank=True, null=True)),
                ('palette', models.CharField(blank=True, max_length=20, null=True)),
                ('page_layout', models.CharField(blank=True, max_length=20, null=True)),
                ('fold_menu', models.IntegerField(blank=True, null=True)),
                ('fold_search', models.IntegerField(blank=True, null=True)),
                ('savedsearches_pinned', models.TextField(blank=True, null=True)),
                ('timeline_order', models.CharField(blank=True, max_length=20, null=True)),
                ('itil_layout', models.TextField(blank=True, null=True)),
                ('richtext_layout', models.CharField(blank=True, max_length=20, null=True)),
                ('set_default_requester', models.IntegerField(blank=True, null=True)),
                ('lock_autolock_mode', models.IntegerField(blank=True, null=True)),
                ('lock_directunlock_notification', models.IntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('highcontrast_css', models.IntegerField(blank=True, null=True)),
                ('plannings', models.TextField(blank=True, null=True)),
                ('sync_field', models.CharField(blank=True, max_length=255, null=True)),
                ('groups_id', models.PositiveIntegerField()),
                ('users_id_supervisor', models.PositiveIntegerField()),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('default_dashboard_central', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_assets', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_helpdesk', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_mini_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('default_central_tab', models.IntegerField(blank=True, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'glpi_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiUsertitles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_usertitles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiVirtualmachinestates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_virtualmachinestates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiVirtualmachinesystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_virtualmachinesystems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiVirtualmachinetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_virtualmachinetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiVlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('tag', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_vlans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiVobjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('data', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_vobjects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlpiWifinetworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('essid', models.CharField(blank=True, max_length=255, null=True)),
                ('mode', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glpi_wifinetworks',
                'managed': False,
            },
        ),
    ]
