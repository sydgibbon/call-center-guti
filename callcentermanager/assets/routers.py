from rest_framework.routers import DefaultRouter
from .views import *

router=DefaultRouter()
router.register(r'computers', ComputersViewSet, basename='computers')
router.register(r'monitors', MonitorsViewSet, basename='monitors')
router.register(r'softwares', SoftwaresViewSet, basename='softwares')
router.register(r'devicemotherboards', DevicemotherboardsViewSet, basename='devicemotherboards')
router.register(r'devicenetworkcardmodels', DevicenetworkcardmodelsViewSet, basename='devicenetworkcardmodels')
router.register(r'networkequipments', NetworkequipmentsViewSet, basename='networkequipments')
router.register(r'printers', PrintersViewSet, basename='printers')
router.register(r'cartridges', CartridgesViewSet, basename='cartridges')
router.register(r'consumables', ConsumablesViewSet, basename='consumables')
router.register(r'phones', PhonesViewSet, basename='phones')
router.register(r'racks', RacksViewSet, basename='racks')
router.register(r'enclosures', EnclosuresViewSet, basename='enclosures')
router.register(r'pdus', PdusViewSet, basename='pdus')
router.register(r'unmanageds', UnmanagedsViewSet, basename='unmanageds')
router.register(r'cables', CablesViewSet, basename='cables')
router.register(r'devicesimcards', DevicesimcardsViewSet, basename='devicesimcards')
router.register(r'computermodels', ComputermodelsViewSet, basename='computermodels')
router.register(r'computersitems', ComputersItemsViewSet, basename='computersitems')
router.register(r'computertypes', ComputertypesViewSet, basename='computertypes')
router.register(r'monitormodels', MonitormodelsViewSet, basename='monitormodels')
router.register(r'monitortypes', MonitortypesViewSet, basename='monitortypes')
router.register(r'softwarecategories', SoftwarecategoriesViewSet, basename='softwarecategories')
router.register(r'softwarelicenses', SoftwarelicensesViewSet, basename='softwarelicenses')
router.register(r'softwareversions', SoftwareversionsViewSet, basename='softwareversions')
router.register(r'networkequipmentmodels', NetworkequipmentmodelsViewSet, basename='networkequipmentmodels')
router.register(r'networkequipmenttypes', NetworkequipmenttypesViewSet, basename='networkequipmenttypes')
router.register(r'printermodels', PrintermodelsViewSet, basename='printermodels')
router.register(r'printertypes', PrintertypesViewSet, basename='printertypes')
router.register(r'printerscartridgeinfos', PrintersCartridgeinfosViewSet, basename='printerscartridgeinfos')
router.register(r'cartridgeitems', CartridgeitemsViewSet, basename='cartridgeitems')
router.register(r'cartridgeitemsprintermodels', CartridgeitemsPrintermodelsViewSet, basename='cartridgeitemsprintermodels')
router.register(r'cartridgeitemtypes', CartridgeitemtypesViewSet, basename='cartridgeitemtypes')
router.register(r'consumableitems', ConsumableitemsViewSet, basename='consumableitems')
router.register(r'consumableitemtypes', ConsumableitemtypesViewSet, basename='consumableitemtypes')
router.register(r'phonemodels', PhonemodelsViewSet, basename='phonemodels')
router.register(r'phonepowersupplies', PhonepowersuppliesViewSet, basename='phonepowersupplies')
router.register(r'phonetypes', PhonetypesViewSet, basename='phonetypes')
router.register(r'itemsracks', ItemsRacksViewSet, basename='itemsracks')
router.register(r'itemsenclosures', ItemsEnclosuresViewSet, basename='itemsenclosures')
router.register(r'pdusplugs', PdusPlugsViewSet, basename='pdusplugs')
router.register(r'pdusracks', PdusRacksViewSet, basename='pdusracks')
router.register(r'cablestrands', CablestrandsViewSet, basename='cablestrands')
router.register(r'cabletypes', CabletypesViewSet, basename='cabletypes')
router.register(r'devicesimcardtypes', DevicesimcardtypesViewSet, basename='devicesimcardtypes')
router.register(r'devicebatteries', DevicebatteriesViewSet, basename='devicebatteries')
router.register(r'devicebatterymodels', DevicebatterymodelsViewSet, basename='devicebatterymodels')
router.register(r'devicebatterytypes', DevicebatterytypesViewSet, basename='devicebatterytypes')
router.register(r'devicecameramodels', DevicecameramodelsViewSet, basename='devicecameramodels')
router.register(r'devicecameras', DevicecamerasViewSet, basename='devicecameras')
router.register(r'devicecasemodels', DevicecasemodelsViewSet, basename='devicecasemodels')
router.register(r'devicecases', DevicecasesViewSet, basename='devicecases')
router.register(r'devicecasetypes', DevicecasetypesViewSet, basename='devicecasetypes')
router.register(r'devicecontrolmodels', DevicecontrolmodelsViewSet, basename='devicecontrolmodels')