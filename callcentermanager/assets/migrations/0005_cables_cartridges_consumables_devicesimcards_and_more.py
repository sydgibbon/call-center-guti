# Generated by Django 4.1 on 2022-09-01 00:48

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('assets', '0004_alter_computers_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('itemtype_endpoint_a', models.CharField(blank=True, max_length=255, null=True)),
                ('itemtype_endpoint_b', models.CharField(blank=True, max_length=255, null=True)),
                ('items_id_endpoint_a', models.PositiveIntegerField()),
                ('items_id_endpoint_b', models.PositiveIntegerField()),
                ('socketmodels_id_endpoint_a', models.PositiveIntegerField()),
                ('socketmodels_id_endpoint_b', models.PositiveIntegerField()),
                ('sockets_id_endpoint_a', models.PositiveIntegerField()),
                ('sockets_id_endpoint_b', models.PositiveIntegerField()),
                ('cablestrands_id', models.PositiveIntegerField()),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('states_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('cabletypes_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cables',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cartridges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('cartridgeitems_id', models.PositiveIntegerField()),
                ('printers_id', models.PositiveIntegerField()),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_use', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('pages', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cartridges',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Consumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('consumableitems_id', models.PositiveIntegerField()),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('items_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consumables',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesimcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('voltage', models.IntegerField(blank=True, null=True)),
                ('devicesimcardtypes_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('allow_voip', models.IntegerField()),
            ],
            options={
                'db_table': 'devicesimcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Enclosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('enclosuremodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('orientation', models.IntegerField(blank=True, null=True)),
                ('power_supplies', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enclosures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.DecimalField(decimal_places=2, max_digits=5)),
                ('have_micro', models.IntegerField()),
                ('have_speaker', models.IntegerField()),
                ('have_subd', models.IntegerField()),
                ('have_bnc', models.IntegerField()),
                ('have_dvi', models.IntegerField()),
                ('have_pivot', models.IntegerField()),
                ('have_hdmi', models.IntegerField()),
                ('have_displayport', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('monitortypes_id', models.PositiveIntegerField()),
                ('monitormodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'monitors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ram', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('networkequipmenttypes_id', models.PositiveIntegerField()),
                ('networkequipmentmodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('cpu', models.IntegerField()),
                ('uptime', models.CharField(max_length=255)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'networkequipments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pdus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('pdumodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('pdutypes_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('phonetypes_id', models.PositiveIntegerField()),
                ('phonemodels_id', models.PositiveIntegerField()),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('phonepowersupplies_id', models.PositiveIntegerField()),
                ('number_line', models.CharField(blank=True, max_length=255, null=True)),
                ('have_headset', models.IntegerField()),
                ('have_hp', models.IntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField()),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phones',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Printers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('have_serial', models.IntegerField()),
                ('have_parallel', models.IntegerField()),
                ('have_usb', models.IntegerField()),
                ('have_wifi', models.IntegerField()),
                ('have_ethernet', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('memory_size', models.CharField(blank=True, max_length=255, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('printertypes_id', models.PositiveIntegerField()),
                ('printermodels_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_global', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('init_pages_counter', models.IntegerField()),
                ('last_pages_counter', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField()),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'printers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Racks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('locations_id', models.PositiveIntegerField()),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('rackmodels_id', models.PositiveIntegerField(blank=True, null=True)),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('racktypes_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('depth', models.IntegerField(blank=True, null=True)),
                ('number_units', models.IntegerField(blank=True, null=True)),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField()),
                ('dcrooms_id', models.PositiveIntegerField()),
                ('room_orientation', models.IntegerField()),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('max_power', models.IntegerField()),
                ('mesured_power', models.IntegerField()),
                ('max_weight', models.IntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'racks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('users_id_tech', models.PositiveIntegerField()),
                ('groups_id_tech', models.PositiveIntegerField()),
                ('is_update', models.IntegerField()),
                ('softwares_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('is_template', models.IntegerField()),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_helpdesk_visible', models.IntegerField()),
                ('softwarecategories_id', models.PositiveIntegerField()),
                ('is_valid', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'softwares',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Unmanageds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('locations_id', models.PositiveIntegerField()),
                ('networks_id', models.PositiveIntegerField()),
                ('manufacturers_id', models.PositiveIntegerField()),
                ('is_deleted', models.IntegerField()),
                ('users_id', models.PositiveIntegerField()),
                ('groups_id', models.PositiveIntegerField()),
                ('states_id', models.PositiveIntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems_id', models.PositiveIntegerField()),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('domains_id', models.PositiveIntegerField()),
                ('agents_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('accepted', models.IntegerField()),
                ('hub', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('snmpcredentials_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'unmanageds',
                'managed': True,
            },
        ),
    ]
