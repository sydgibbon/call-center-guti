# Generated by Django 4.0.5 on 2023-04-04 23:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('assistance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('password_last_update', models.DateTimeField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('realname', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('use_mode', models.IntegerField(blank=True, null=True)),
                ('list_limit', models.IntegerField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('auths_id', models.PositiveIntegerField(blank=True, null=True)),
                ('authtype', models.IntegerField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_sync', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(blank=True, null=True)),
                ('profiles_id', models.PositiveIntegerField(blank=True, null=True)),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('usertitles_id', models.PositiveIntegerField(blank=True, null=True)),
                ('usercategories_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_format', models.IntegerField(blank=True, null=True)),
                ('number_format', models.IntegerField(blank=True, null=True)),
                ('names_format', models.IntegerField(blank=True, null=True)),
                ('csv_delimiter', models.CharField(blank=True, max_length=1, null=True)),
                ('is_ids_visible', models.IntegerField(blank=True, null=True)),
                ('use_flat_dropdowntree', models.IntegerField(blank=True, null=True)),
                ('show_jobs_at_login', models.IntegerField(blank=True, null=True)),
                ('priority_1', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_2', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_3', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_4', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_5', models.CharField(blank=True, max_length=20, null=True)),
                ('priority_6', models.CharField(blank=True, max_length=20, null=True)),
                ('followup_private', models.IntegerField(blank=True, null=True)),
                ('task_private', models.IntegerField(blank=True, null=True)),
                ('default_requesttypes_id', models.PositiveIntegerField(blank=True, null=True)),
                ('password_forget_token', models.CharField(blank=True, max_length=40, null=True)),
                ('password_forget_token_date', models.DateTimeField(blank=True, null=True)),
                ('user_dn', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('show_count_on_tabs', models.IntegerField(blank=True, null=True)),
                ('refresh_views', models.IntegerField(blank=True, null=True)),
                ('set_default_tech', models.IntegerField(blank=True, null=True)),
                ('personal_token', models.CharField(blank=True, max_length=255, null=True)),
                ('personal_token_date', models.DateTimeField(blank=True, null=True)),
                ('api_token', models.CharField(blank=True, max_length=255, null=True)),
                ('api_token_date', models.DateTimeField(blank=True, null=True)),
                ('cookie_token', models.CharField(blank=True, max_length=255, null=True)),
                ('cookie_token_date', models.DateTimeField(blank=True, null=True)),
                ('display_count_on_home', models.IntegerField(blank=True, null=True)),
                ('notification_to_myself', models.IntegerField(blank=True, null=True)),
                ('duedateok_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatewarning_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatecritical_color', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatewarning_less', models.IntegerField(blank=True, null=True)),
                ('duedatecritical_less', models.IntegerField(blank=True, null=True)),
                ('duedatewarning_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('duedatecritical_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('display_options', models.TextField(blank=True, null=True)),
                ('is_deleted_ldap', models.IntegerField(blank=True, null=True)),
                ('pdffont', models.CharField(blank=True, max_length=255, null=True)),
                ('picture', models.CharField(blank=True, max_length=255, null=True)),
                ('begin_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('keep_devices_when_purging_item', models.IntegerField(blank=True, null=True)),
                ('privatebookmarkorder', models.TextField(blank=True, null=True)),
                ('backcreated', models.IntegerField(blank=True, null=True)),
                ('task_state', models.IntegerField(blank=True, null=True)),
                ('palette', models.CharField(blank=True, max_length=20, null=True)),
                ('page_layout', models.CharField(blank=True, max_length=20, null=True)),
                ('fold_menu', models.IntegerField(blank=True, null=True)),
                ('fold_search', models.IntegerField(blank=True, null=True)),
                ('savedsearches_pinned', models.TextField(blank=True, null=True)),
                ('timeline_order', models.CharField(blank=True, max_length=20, null=True)),
                ('itil_layout', models.TextField(blank=True, null=True)),
                ('richtext_layout', models.CharField(blank=True, max_length=20, null=True)),
                ('set_default_requester', models.IntegerField(blank=True, null=True)),
                ('lock_autolock_mode', models.IntegerField(blank=True, null=True)),
                ('lock_directunlock_notification', models.IntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('highcontrast_css', models.IntegerField(blank=True, null=True)),
                ('plannings', models.TextField(blank=True, null=True)),
                ('sync_field', models.CharField(blank=True, max_length=255, null=True)),
                ('groups_id', models.PositiveIntegerField(blank=True, null=True)),
                ('users_id_supervisor', models.PositiveIntegerField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('default_dashboard_central', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_assets', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_helpdesk', models.CharField(blank=True, max_length=100, null=True)),
                ('default_dashboard_mini_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('default_central_tab', models.IntegerField(blank=True, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Authldaps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('basedn', models.CharField(blank=True, max_length=255, null=True)),
                ('rootdn', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField(default=0)),
                ('condition', models.TextField(blank=True, null=True)),
                ('login_field', models.CharField(blank=True, max_length=255, null=True)),
                ('sync_field', models.CharField(blank=True, max_length=255, null=True)),
                ('use_tls', models.IntegerField(default=0)),
                ('group_field', models.CharField(blank=True, max_length=255, null=True)),
                ('group_condition', models.TextField(blank=True, null=True)),
                ('group_search_type', models.IntegerField(default=0)),
                ('group_member_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email1_field', models.CharField(blank=True, max_length=255, null=True)),
                ('realname_field', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname_field', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_field', models.CharField(blank=True, max_length=255, null=True)),
                ('phone2_field', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_field', models.CharField(blank=True, max_length=255, null=True)),
                ('comment_field', models.CharField(blank=True, max_length=255, null=True)),
                ('use_dn', models.IntegerField(default=0)),
                ('time_offset', models.IntegerField(default=0)),
                ('deref_option', models.IntegerField(default=0)),
                ('title_field', models.CharField(blank=True, max_length=255, null=True)),
                ('category_field', models.CharField(blank=True, max_length=255, null=True)),
                ('language_field', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_field', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_condition', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_default', models.IntegerField(default=0)),
                ('is_active', models.IntegerField(default=1)),
                ('rootdn_passwd', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_number_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email2_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email3_field', models.CharField(blank=True, max_length=255, null=True)),
                ('email4_field', models.CharField(blank=True, max_length=255, null=True)),
                ('location_field', models.CharField(blank=True, max_length=255, null=True)),
                ('responsible_field', models.CharField(blank=True, max_length=255, null=True)),
                ('pagesize', models.IntegerField(default=0)),
                ('ldap_maxlimit', models.IntegerField(default=0)),
                ('can_support_pagesize', models.IntegerField(default=0)),
                ('picture_field', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('inventory_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('tls_certfile', models.TextField(blank=True, null=True)),
                ('tls_keyfile', models.TextField(blank=True, null=True)),
                ('use_bind', models.IntegerField(default=0)),
                ('timeout', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'authldaps',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Autoupdatesystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'autoupdatesystems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cablestrands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cablestrands',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cabletypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cabletypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cartridgeitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('alarm_threshold', models.IntegerField(default=0)),
                ('stock_target', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cartridgeitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cartridgeitemtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cartridgeitemtypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('required_units', models.IntegerField(default=0)),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField(default=0)),
                ('power_consumption', models.IntegerField(default=0)),
                ('is_half_rack', models.IntegerField(default=0)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computermodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.autoupdatesystems')),
                ('computermodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.computermodels')),
            ],
            options={
                'db_table': 'computers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Computertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computertypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Consumableitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('alarm_threshold', models.IntegerField(default=0)),
                ('stock_target', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consumableitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Consumableitemtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'consumableitemtypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Datacenters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('is_deleted', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'datacenters',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Dcrooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('vis_cols', models.IntegerField(blank=True, null=True)),
                ('vis_rows', models.IntegerField(blank=True, null=True)),
                ('blueprint', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('datacenters', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.datacenters')),
            ],
            options={
                'db_table': 'dcrooms',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicebatteries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('voltage', models.IntegerField(blank=True, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicebatteries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicebatterymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicebatterymodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicebatterytypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicebatterytypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecameramodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicecameramodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecameras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('flashunit', models.IntegerField(default=0)),
                ('lensfacing', models.CharField(blank=True, max_length=255, null=True)),
                ('orientation', models.CharField(blank=True, max_length=255, null=True)),
                ('focallength', models.CharField(blank=True, max_length=255, null=True)),
                ('sensorsize', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('support', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicecameramodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicecameramodels')),
            ],
            options={
                'db_table': 'devicecameras',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecasemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicecasemodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicecasemodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicecasemodels')),
            ],
            options={
                'db_table': 'devicecases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecasetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicecasetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecontrolmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicecontrolmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicecontrols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('is_raid', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicecontrolmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicecontrolmodels')),
            ],
            options={
                'db_table': 'devicecontrols',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicedrivemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicedrivemodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicedrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('is_writer', models.IntegerField(default=0)),
                ('speed', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicedrivemodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicedrivemodels')),
            ],
            options={
                'db_table': 'devicedrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicefirmwaremodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicefirmwaremodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicefirmwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('date', models.DateField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicefirmwaremodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicefirmwaremodels')),
            ],
            options={
                'db_table': 'devicefirmwares',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicefirmwaretypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicefirmwaretypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegenericmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicegenericmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegenerics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicegenericmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicegenericmodels')),
            ],
            options={
                'db_table': 'devicegenerics',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegenerictypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicegenerictypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegraphiccardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicegraphiccardmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicegraphiccards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('memory_default', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('chipset', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicegraphiccardmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicegraphiccardmodels')),
            ],
            options={
                'db_table': 'devicegraphiccards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deviceharddrivemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'deviceharddrivemodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deviceharddrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('rpm', models.CharField(blank=True, max_length=255, null=True)),
                ('cache', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('capacity_default', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('deviceharddrivemodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.deviceharddrivemodels')),
            ],
            options={
                'db_table': 'deviceharddrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicememories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('frequence', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('size_default', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicememories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicememorymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicememorymodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicememorytypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicememorytypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicemotherboardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicemotherboardmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicemotherboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('chipset', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicemotherboardmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicemotherboardmodels')),
            ],
            options={
                'db_table': 'devicemotherboards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicenetworkcardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicenetworkcardmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicenetworkcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('bandwidth', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('mac_default', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicenetworkcardmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicenetworkcardmodels')),
            ],
            options={
                'db_table': 'devicenetworkcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicepcimodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicepcimodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicepcis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicenetworkcardmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicenetworkcardmodels')),
                ('devicepcimodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicepcimodels')),
            ],
            options={
                'db_table': 'devicepcis',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('power', models.CharField(blank=True, max_length=255, null=True)),
                ('is_atx', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicepowersupplies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicepowersupplymodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicepowersupplymodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deviceprocessormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'deviceprocessormodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deviceprocessors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('frequence', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('frequency_default', models.IntegerField(default=0)),
                ('nbcores_default', models.IntegerField(blank=True, null=True)),
                ('nbthreads_default', models.IntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('deviceprocessormodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.deviceprocessormodels')),
            ],
            options={
                'db_table': 'deviceprocessors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesensormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicesensormodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesensors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicesensormodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicesensormodels')),
            ],
            options={
                'db_table': 'devicesensors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesensortypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicesensortypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesimcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('is_deleted', models.IntegerField(default=0)),
                ('voltage', models.IntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('allow_voip', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'devicesimcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesimcardtypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devicesimcardtypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesoundcardmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'devicesoundcardmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devicesoundcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('devicesoundcardmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicesoundcardmodels')),
            ],
            options={
                'db_table': 'devicesoundcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Enclosuremodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('required_units', models.IntegerField(default=0)),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField(default=0)),
                ('power_consumption', models.IntegerField(default=0)),
                ('is_half_rack', models.IntegerField(default=0)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enclosuremodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(default=0)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_email', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('from_email', models.CharField(blank=True, max_length=255, null=True)),
                ('from_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('noreply_email', models.CharField(blank=True, max_length=255, null=True)),
                ('noreply_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('replyto_email', models.CharField(blank=True, max_length=255, null=True)),
                ('replyto_email_name', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_subject_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('ldap_dn', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('mail_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_ldapfilter', models.TextField(blank=True, null=True)),
                ('mailing_signature', models.TextField(blank=True, null=True)),
                ('cartridges_alert_repeat', models.IntegerField(default=0)),
                ('consumables_alert_repeat', models.IntegerField(default=0)),
                ('use_licenses_alert', models.IntegerField(default=0)),
                ('send_licenses_alert_before_delay', models.IntegerField(default=0)),
                ('use_certificates_alert', models.IntegerField(default=0)),
                ('send_certificates_alert_before_delay', models.IntegerField(default=0)),
                ('certificates_alert_repeat_interval', models.IntegerField(default=0)),
                ('use_contracts_alert', models.IntegerField(default=0)),
                ('send_contracts_alert_before_delay', models.IntegerField(default=0)),
                ('use_infocoms_alert', models.IntegerField(default=0)),
                ('send_infocoms_alert_before_delay', models.IntegerField(default=0)),
                ('use_reservations_alert', models.IntegerField(default=0)),
                ('use_domains_alert', models.IntegerField(default=0)),
                ('send_domains_alert_close_expiries_delay', models.IntegerField(default=0)),
                ('send_domains_alert_expired_delay', models.IntegerField(default=0)),
                ('autoclose_delay', models.IntegerField(default=0)),
                ('autopurge_delay', models.IntegerField(default=0)),
                ('notclosed_delay', models.IntegerField(default=0)),
                ('calendars_strategy', models.IntegerField(default=0)),
                ('auto_assign_mode', models.IntegerField(default=0)),
                ('tickettype', models.IntegerField(default=0)),
                ('max_closedate', models.DateTimeField(blank=True, null=True)),
                ('inquest_config', models.IntegerField(default=0)),
                ('inquest_rate', models.IntegerField(default=0)),
                ('inquest_delay', models.IntegerField(default=0)),
                ('inquest_url', models.CharField(blank=True, db_column='inquest_URL', max_length=255, null=True)),
                ('autofill_warranty_date', models.CharField(max_length=255)),
                ('autofill_use_date', models.CharField(max_length=255)),
                ('autofill_buy_date', models.CharField(max_length=255)),
                ('autofill_delivery_date', models.CharField(max_length=255)),
                ('autofill_order_date', models.CharField(max_length=255)),
                ('tickettemplates_strategy', models.IntegerField(default=0)),
                ('changetemplates_strategy', models.IntegerField(default=0)),
                ('changetemplates', models.PositiveIntegerField(blank=True, null=True)),
                ('problemtemplates_strategy', models.IntegerField(default=0)),
                ('problemtemplates', models.PositiveIntegerField(blank=True, null=True)),
                ('entities_strategy_software', models.IntegerField(default=0)),
                ('entities_software', models.PositiveIntegerField(blank=True, null=True)),
                ('default_contract_alert', models.IntegerField(default=0)),
                ('default_infocom_alert', models.IntegerField(default=0)),
                ('default_cartridges_alarm_threshold', models.IntegerField(default=0)),
                ('default_consumables_alarm_threshold', models.IntegerField(default=0)),
                ('delay_send_emails', models.IntegerField(default=0)),
                ('is_notif_enable_default', models.IntegerField(default=0)),
                ('inquest_duration', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('autofill_decommission_date', models.CharField(max_length=255)),
                ('suppliers_as_private', models.IntegerField(default=0)),
                ('anonymize_support_agents', models.IntegerField(default=0)),
                ('display_users_initials', models.IntegerField(default=0)),
                ('contracts_strategy_default', models.IntegerField(default=0)),
                ('contracts_default', models.PositiveIntegerField(blank=True, null=True)),
                ('enable_custom_css', models.IntegerField(default=0)),
                ('custom_css_code', models.TextField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, max_length=255, null=True)),
                ('transfers_strategy', models.IntegerField(default=0)),
                ('transfers', models.PositiveIntegerField(blank=True, null=True)),
                ('agent_base_url', models.CharField(blank=True, max_length=255, null=True)),
                ('authldaps', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.authldaps')),
                ('calendars', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assistance.calendars')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entities_entities', to='assets.entities')),
                ('tickettemplates', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assistance.tickettemplates')),
            ],
            options={
                'db_table': 'entities',
                'managed': True,
                'unique_together': {('entities_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Fqdns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('fqdn', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'fqdns',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('entities_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('ldap_field', models.CharField(blank=True, max_length=255, null=True)),
                ('ldap_value', models.TextField(blank=True, null=True)),
                ('ldap_group_dn', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('groups_id', models.PositiveIntegerField(blank=True, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_requester', models.IntegerField(blank=True, null=True)),
                ('is_watcher', models.IntegerField(blank=True, null=True)),
                ('is_assign', models.IntegerField(blank=True, null=True)),
                ('is_task', models.IntegerField(blank=True, null=True)),
                ('is_notify', models.IntegerField(blank=True, null=True)),
                ('is_itemgroup', models.IntegerField(blank=True, null=True)),
                ('is_usergroup', models.IntegerField(blank=True, null=True)),
                ('is_manager', models.IntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'groups',
                'managed': True,
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Imageformats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'imageformats',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Imageresolutions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_video', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'imageresolutions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Interfacetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'interfacetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecameras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('devicecameras', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicecameras')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicecameras')),
            ],
            options={
                'db_table': 'items_devicecameras',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicenetworkcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicenetworkcards', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicenetworkcards')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicenetworkcards')),
            ],
            options={
                'db_table': 'items_devicenetworkcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lineoperators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('mcc', models.IntegerField(blank=True, null=True)),
                ('mnc', models.IntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'lineoperators',
                'managed': True,
                'unique_together': {('mcc', 'mnc')},
            },
        ),
        migrations.CreateModel(
            name='Linetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'linetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(default=0)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('town', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('building', models.CharField(blank=True, max_length=255, null=True)),
                ('room', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.CharField(blank=True, max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations_locations', to='assets.locations')),
            ],
            options={
                'db_table': 'locations',
                'managed': True,
                'unique_together': {('entities_id', 'locations_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Manufacturers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'manufacturers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitormodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('required_units', models.IntegerField(default=0)),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField(default=0)),
                ('power_consumption', models.IntegerField(default=0)),
                ('is_half_rack', models.IntegerField(default=0)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monitormodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitortypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monitortypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkequipmentmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('required_units', models.IntegerField(default=0)),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField(default=0)),
                ('power_consumption', models.IntegerField(default=0)),
                ('is_half_rack', models.IntegerField(default=0)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkequipmentmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkequipmenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkequipmenttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkinterfaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkinterfaces',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportfiberchanneltypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networkportfiberchanneltypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('is_recursive', models.IntegerField(default=0)),
                ('logical_number', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('instantiation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('mac', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('ifmtu', models.IntegerField(default=0)),
                ('ifspeed', models.BigIntegerField(blank=True, null=True)),
                ('ifinternalstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('ifconnectionstatus', models.IntegerField(default=0)),
                ('iflastchange', models.CharField(blank=True, max_length=255, null=True)),
                ('ifinbytes', models.BigIntegerField(blank=True, null=True)),
                ('ifinerrors', models.BigIntegerField(blank=True, null=True)),
                ('ifoutbytes', models.BigIntegerField(blank=True, null=True)),
                ('ifouterrors', models.BigIntegerField(blank=True, null=True)),
                ('ifstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('ifdescr', models.CharField(blank=True, max_length=255, null=True)),
                ('ifalias', models.CharField(blank=True, max_length=255, null=True)),
                ('portduplex', models.CharField(blank=True, max_length=255, null=True)),
                ('trunk', models.IntegerField(default=0)),
                ('lastup', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
            ],
            options={
                'db_table': 'networkports',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'networks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Operatingsystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operatingsystems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Passivedcequipmentmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('required_units', models.IntegerField(default=0)),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField(default=0)),
                ('power_consumption', models.IntegerField(default=0)),
                ('is_half_rack', models.IntegerField(default=0)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passivedcequipmentmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Passivedcequipmenttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passivedcequipmenttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pdumodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('required_units', models.IntegerField(default=0)),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField(default=0)),
                ('max_power', models.IntegerField(default=0)),
                ('is_half_rack', models.IntegerField(default=0)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('is_rackable', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdumodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pdus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pdus_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('pdumodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.pdumodels')),
            ],
            options={
                'db_table': 'pdus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Peripheralmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('required_units', models.IntegerField(default=0)),
                ('depth', models.FloatField()),
                ('power_connections', models.IntegerField(default=0)),
                ('power_consumption', models.IntegerField(default=0)),
                ('is_half_rack', models.IntegerField(default=0)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'peripheralmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Peripheraltypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'peripheraltypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phonemodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phonemodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phonepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phonepowersupplies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Phonetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phonetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Plugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'plugs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Printermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('picture_front', models.TextField(blank=True, null=True)),
                ('picture_rear', models.TextField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'printermodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Printers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('have_serial', models.IntegerField(default=0)),
                ('have_parallel', models.IntegerField(default=0)),
                ('have_usb', models.IntegerField(default=0)),
                ('have_wifi', models.IntegerField(default=0)),
                ('have_ethernet', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('memory_size', models.CharField(blank=True, max_length=255, null=True)),
                ('is_global', models.IntegerField(default=0)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('init_pages_counter', models.IntegerField(default=0)),
                ('last_pages_counter', models.IntegerField(default=0)),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.autoupdatesystems')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='printers_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('networks', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networks')),
                ('printermodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.printermodels')),
            ],
            options={
                'db_table': 'printers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Printertypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'printertypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rackmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_number', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rackmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Snmpcredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('snmpversion', models.CharField(blank=True, max_length=8, null=True)),
                ('community', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('authentication', models.CharField(blank=True, max_length=255, null=True)),
                ('auth_passphrase', models.CharField(blank=True, max_length=255, null=True)),
                ('encryption', models.CharField(blank=True, max_length=255, null=True)),
                ('priv_passphrase', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'snmpcredentials',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Socketmodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'socketmodels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwarecategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(default=0)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('softwarecategories', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwarecategories_softwarecategories', to='assets.softwarecategories')),
            ],
            options={
                'db_table': 'softwarecategories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwarelicensetypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('softwarelicensetypes', models.PositiveIntegerField(blank=True, null=True)),
                ('level', models.IntegerField(default=0)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('entities', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('completename', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'softwarelicensetypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_update', models.IntegerField(default=0)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_helpdesk_visible', models.IntegerField(default=0)),
                ('is_valid', models.IntegerField(default=0)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('softwarecategories', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.softwarecategories')),
                ('softwares', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares_softwares', to='assets.softwares')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwares_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'softwares',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(default=0)),
                ('ancestors_cache', models.TextField(blank=True, null=True)),
                ('sons_cache', models.TextField(blank=True, null=True)),
                ('is_visible_computer', models.IntegerField(default=0)),
                ('is_visible_monitor', models.IntegerField(default=0)),
                ('is_visible_networkequipment', models.IntegerField(default=0)),
                ('is_visible_peripheral', models.IntegerField(default=0)),
                ('is_visible_phone', models.IntegerField(default=0)),
                ('is_visible_printer', models.IntegerField(default=0)),
                ('is_visible_softwareversion', models.IntegerField(default=0)),
                ('is_visible_softwarelicense', models.IntegerField(default=0)),
                ('is_visible_line', models.IntegerField(default=0)),
                ('is_visible_certificate', models.IntegerField(default=0)),
                ('is_visible_rack', models.IntegerField(default=0)),
                ('is_visible_passivedcequipment', models.IntegerField(default=0)),
                ('is_visible_enclosure', models.IntegerField(default=0)),
                ('is_visible_pdu', models.IntegerField(default=0)),
                ('is_visible_cluster', models.IntegerField(default=0)),
                ('is_visible_contract', models.IntegerField(default=0)),
                ('is_visible_appliance', models.IntegerField(default=0)),
                ('is_visible_databaseinstance', models.IntegerField(default=0)),
                ('is_visible_cable', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='states_states', to='assets.states')),
            ],
            options={
                'db_table': 'states',
                'managed': True,
                'unique_together': {('states_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Vlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('tag', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'vlans',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Unmanageds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('accepted', models.IntegerField(default=0)),
                ('hub', models.IntegerField(default=0)),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('agents', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assistance.agents')),
                ('autoupdatesystems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.autoupdatesystems')),
                ('domains', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assistance.domains')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('networks', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networks')),
                ('snmpcredentials', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.snmpcredentials')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'unmanageds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwareversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('arch', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('operatingsystems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.operatingsystems')),
                ('softwares', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.softwares')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'softwareversions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Softwarelicenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completename', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('expire', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('is_valid', models.IntegerField(default=0)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_helpdesk_visible', models.IntegerField(default=0)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('allow_overquota', models.IntegerField(default=0)),
                ('pictures', models.TextField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwarelicenses_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('softwarelicenses', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwarelicenses_softwarelicenses', to='assets.softwarelicenses')),
                ('softwarelicensetypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.softwarelicensetypes')),
                ('softwares', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.softwares')),
                ('softwareversions_buy', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwarelicenses_softwareversions_buy', to='assets.softwareversions')),
                ('softwareversions_use', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwarelicenses_softwareversions_use', to='assets.softwareversions')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='softwarelicenses_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'softwarelicenses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sockets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('wiring_side', models.IntegerField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.sockets')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
                ('socketmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.socketmodels')),
            ],
            options={
                'db_table': 'sockets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Racktypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'racktypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Racks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('depth', models.IntegerField(blank=True, null=True)),
                ('number_units', models.IntegerField(blank=True, null=True)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('room_orientation', models.IntegerField(default=0)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('max_power', models.IntegerField(default=0)),
                ('mesured_power', models.IntegerField(default=0)),
                ('max_weight', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('dcrooms', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.dcrooms')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='racks_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('rackmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.rackmodels')),
                ('racktypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.racktypes')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='racks_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'racks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PrintersCartridgeinfos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('printers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.printers')),
            ],
            options={
                'db_table': 'printers_cartridgeinfos',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='printers',
            name='printertypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.printertypes'),
        ),
        migrations.AddField(
            model_name='printers',
            name='snmpcredentials',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.snmpcredentials'),
        ),
        migrations.AddField(
            model_name='printers',
            name='states',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states'),
        ),
        migrations.AddField(
            model_name='printers',
            name='users',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='printers',
            name='users_tech',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='printers_users_tech', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Phones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('number_line', models.CharField(blank=True, max_length=255, null=True)),
                ('have_headset', models.IntegerField(default=0)),
                ('have_hp', models.IntegerField(default=0)),
                ('is_global', models.IntegerField(default=0)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.autoupdatesystems')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phones_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('phonemodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.phonemodels')),
                ('phonepowersupplies', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.phonepowersupplies')),
                ('phonetypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.phonetypes')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phones_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'phones',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Peripherals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_global', models.IntegerField(default=0)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('autoupdatesystems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.autoupdatesystems')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='peripherals_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('peripheralmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.peripheralmodels')),
                ('peripheraltypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.peripheraltypes')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='peripherals_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'peripherals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pdutypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'pdutypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PdusRacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(default=0)),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pdus', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.pdus')),
                ('racks', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.racks')),
            ],
            options={
                'db_table': 'pdus_racks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PdusPlugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_plugs', models.IntegerField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('pdus', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.pdus')),
                ('plugs', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.plugs')),
            ],
            options={
                'db_table': 'pdus_plugs',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='pdus',
            name='pdutypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.pdutypes'),
        ),
        migrations.AddField(
            model_name='pdus',
            name='states',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states'),
        ),
        migrations.AddField(
            model_name='pdus',
            name='users_tech',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pdus_users_tech', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Passivedcequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='passivedcequipments_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('passivedcequipmentmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.passivedcequipmentmodels')),
                ('passivedcequipmenttypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.passivedcequipmenttypes')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='passivedcequipments_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'passivedcequipments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportwifis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('mode', models.CharField(blank=True, max_length=20, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('items_devicenetworkcards', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicenetworkcards')),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
                ('networkportwifis', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='networkportwifis_networkportwifis', to='assets.networkportwifis')),
                ('wifinetworks', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networks')),
            ],
            options={
                'db_table': 'networkportwifis',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkporttypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('value_decimal', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_importable', models.IntegerField(default=0)),
                ('instantiation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'networkporttypes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportlocals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
            ],
            options={
                'db_table': 'networkportlocals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportfiberchannels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wwn', models.CharField(blank=True, max_length=16, null=True)),
                ('speed', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('items_devicenetworkcards', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicenetworkcards')),
                ('networkportfiberchanneltypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkportfiberchanneltypes')),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
            ],
            options={
                'db_table': 'networkportfiberchannels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportethernets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('speed', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('items_devicenetworkcards', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicenetworkcards')),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
            ],
            options={
                'db_table': 'networkportethernets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportdialups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
            ],
            options={
                'db_table': 'networkportdialups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportconnectionlogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('connected', models.IntegerField(default=0)),
                ('networkports_destination', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='networkportconnectionlogs_networkports_destination', to='assets.networkports')),
                ('networkports_source', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
            ],
            options={
                'db_table': 'networkportconnectionlogs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportaliases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
                ('networkports_alias', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkportaliases')),
            ],
            options={
                'db_table': 'networkportaliases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkportaggregates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_list', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
            ],
            options={
                'db_table': 'networkportaggregates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networknames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('fqdns', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.fqdns')),
                ('ipnetworks', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networks')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networknames')),
            ],
            options={
                'db_table': 'networknames',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkequipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recursive', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ram', models.CharField(blank=True, max_length=255, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('sysdescr', models.TextField(blank=True, null=True)),
                ('cpu', models.IntegerField(default=0)),
                ('uptime', models.CharField(max_length=255)),
                ('last_inventory_update', models.DateTimeField(blank=True, null=True)),
                ('autoupdatesystems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.autoupdatesystems')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='networkequipments_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('networkequipmentmodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkequipmentmodels')),
                ('networkequipmenttypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkequipmenttypes')),
                ('networks', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networks')),
                ('snmpcredentials', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.snmpcredentials')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='networkequipments_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'networkequipments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Networkaliases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('fqdns', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.fqdns')),
                ('networknames', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networknames')),
            ],
            options={
                'db_table': 'networkaliases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('have_micro', models.IntegerField(default=0)),
                ('have_speaker', models.IntegerField(default=0)),
                ('have_subd', models.IntegerField(default=0)),
                ('have_bnc', models.IntegerField(default=0)),
                ('have_dvi', models.IntegerField(default=0)),
                ('have_pivot', models.IntegerField(default=0)),
                ('have_hdmi', models.IntegerField(default=0)),
                ('have_displayport', models.IntegerField(default=0)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_global', models.IntegerField(default=0)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_tco', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('autoupdatesystems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.autoupdatesystems')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monitors_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('monitormodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.monitormodels')),
                ('monitortypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.monitortypes')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monitors_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'monitors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_recursive', models.IntegerField(default=0)),
                ('is_deleted', models.IntegerField(default=0)),
                ('caller_num', models.CharField(max_length=255)),
                ('caller_name', models.CharField(max_length=255)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('lineoperators', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.lineoperators')),
                ('linetypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.linetypes')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lines',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsOperatingsystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_id', models.PositiveIntegerField()),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('operatingsystems_id', models.PositiveIntegerField()),
                ('operatingsystemversions_id', models.PositiveIntegerField()),
                ('operatingsystemservicepacks_id', models.PositiveIntegerField()),
                ('operatingsystemarchitectures_id', models.PositiveIntegerField()),
                ('operatingsystemkernelversions_id', models.PositiveIntegerField()),
                ('license_number', models.CharField(blank=True, max_length=255, null=True)),
                ('licenseid', models.CharField(blank=True, max_length=255, null=True)),
                ('operatingsystemeditions_id', models.PositiveIntegerField()),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('is_dynamic', models.IntegerField()),
                ('entities_id', models.PositiveIntegerField()),
                ('is_recursive', models.IntegerField()),
            ],
            options={
                'db_table': 'items_operatingsystems',
                'managed': True,
                'unique_together': {('items_id', 'itemtype', 'operatingsystems_id', 'operatingsystemarchitectures_id')},
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicesoundcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicesoundcards', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicesoundcards')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicesoundcards')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicesoundcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicesimcards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=100)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('pin', models.CharField(max_length=255)),
                ('pin2', models.CharField(max_length=255)),
                ('puk', models.CharField(max_length=255)),
                ('puk2', models.CharField(max_length=255)),
                ('msin', models.CharField(max_length=255)),
                ('devicesimcards', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicesimcards')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicesimcards')),
                ('lines', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.lines')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'items_devicesimcards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicesensors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicesensors', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicesensors')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicesensors')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicesensors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDeviceprocessors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('frequency', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('nbcores', models.IntegerField(blank=True, null=True)),
                ('nbthreads', models.IntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('deviceprocessors', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.deviceprocessors')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdeviceprocessors')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_deviceprocessors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicepowersupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicepowersupplies', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicepowersupplies')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicepowersupplies')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicepowersupplies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicepcis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicepcis', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicepcis')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicepcis')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicepcis',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='itemsdevicenetworkcards',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.AddField(
            model_name='itemsdevicenetworkcards',
            name='states',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states'),
        ),
        migrations.CreateModel(
            name='ItemsDevicemotherboards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicemotherboards', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicemotherboards')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicemotherboards')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicemotherboards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicememories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicememories', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicememories')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicememories')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicememories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDeviceharddrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('capacity', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('deviceharddrives', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.deviceharddrives')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdeviceharddrives')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_deviceharddrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicegraphiccards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('memory', models.IntegerField(default=0)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicegraphiccards', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicegraphiccards')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicegraphiccards')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicegraphiccards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicegenerics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicegenerics', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicegenerics')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicegenerics')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicegenerics',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicefirmwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicefirmwares', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicefirmwares')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicefirmwares')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicefirmwares',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicedrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicedrives', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicedrives')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicedrives')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicedrives',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecontrols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('busid', models.CharField(blank=True, db_column='busID', max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecontrols', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicecontrols')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicecontrols')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicecontrols',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('devicecases', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicecases')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicecases')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicecases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecamerasImageresolutions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_dynamic', models.IntegerField(default=0)),
                ('imageresolutions', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.imageresolutions')),
                ('item_devicecameras', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicecameras')),
            ],
            options={
                'db_table': 'items_devicecameras_imageresolutions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicecamerasImageformats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_dynamic', models.IntegerField(default=0)),
                ('imageformats', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.imageformats')),
                ('item_devicecameras', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicecameras')),
            ],
            options={
                'db_table': 'items_devicecameras_imageformats',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemsDevicebatteries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturing_date', models.DateField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('real_capacity', models.IntegerField(default=0)),
                ('devicebatteries', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicebatteries')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsdevicebatteries')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
            ],
            options={
                'db_table': 'items_devicebatteries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EntitiesRssfeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rssfeeds', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'entities_rssfeeds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EntitiesReminders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminders', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'entities_reminders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EntitiesKnowbaseitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowbaseitems', models.PositiveIntegerField(blank=True, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
            ],
            options={
                'db_table': 'entities_knowbaseitems',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Enclosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('is_template', models.IntegerField(default=0)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('orientation', models.IntegerField(blank=True, null=True)),
                ('power_supplies', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('enclosuremodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.enclosuremodels')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('groups_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enclosures_groups_tech', to='assets.groups')),
                ('locations', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations')),
                ('manufacturers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enclosures_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'enclosures',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='devicesoundcards',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicesoundcards',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicesimcards',
            name='devicesimcardtypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicesimcardtypes'),
        ),
        migrations.AddField(
            model_name='devicesimcards',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicesimcards',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicesensors',
            name='devicesensortypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicesensortypes'),
        ),
        migrations.AddField(
            model_name='devicesensors',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicesensors',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.AddField(
            model_name='devicesensors',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicesensors',
            name='states',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states'),
        ),
        migrations.AddField(
            model_name='deviceprocessors',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='deviceprocessors',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicepowersupplies',
            name='devicepowersupplymodels',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicepowersupplymodels'),
        ),
        migrations.AddField(
            model_name='devicepowersupplies',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicepowersupplies',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicepcis',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicepcis',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicenetworkcards',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicenetworkcards',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicemotherboards',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicemotherboards',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicememories',
            name='devicememorymodels',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicememorymodels'),
        ),
        migrations.AddField(
            model_name='devicememories',
            name='devicememorytypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicememorytypes'),
        ),
        migrations.AddField(
            model_name='devicememories',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicememories',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='deviceharddrives',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='deviceharddrives',
            name='interfacetypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.interfacetypes'),
        ),
        migrations.AddField(
            model_name='deviceharddrives',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicegraphiccards',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicegraphiccards',
            name='interfacetypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.interfacetypes'),
        ),
        migrations.AddField(
            model_name='devicegraphiccards',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicegenerics',
            name='devicegenerictypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicegenerictypes'),
        ),
        migrations.AddField(
            model_name='devicegenerics',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicegenerics',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.AddField(
            model_name='devicegenerics',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicegenerics',
            name='states',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states'),
        ),
        migrations.AddField(
            model_name='devicefirmwares',
            name='devicefirmwaretypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicefirmwaretypes'),
        ),
        migrations.AddField(
            model_name='devicefirmwares',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicefirmwares',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicedrives',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicedrives',
            name='interfacetypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.interfacetypes'),
        ),
        migrations.AddField(
            model_name='devicedrives',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicecontrols',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicecontrols',
            name='interfacetypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.interfacetypes'),
        ),
        migrations.AddField(
            model_name='devicecontrols',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicecases',
            name='devicecasetypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicecasetypes'),
        ),
        migrations.AddField(
            model_name='devicecases',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicecases',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicecameras',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicecameras',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='devicebatteries',
            name='devicebatterymodels',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicebatterymodels'),
        ),
        migrations.AddField(
            model_name='devicebatteries',
            name='devicebatterytypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.devicebatterytypes'),
        ),
        migrations.AddField(
            model_name='devicebatteries',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='devicebatteries',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='dcrooms',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='dcrooms',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.AddField(
            model_name='datacenters',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='datacenters',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.CreateModel(
            name='Consumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('consumableitems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.consumableitems')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.cartridgeitems')),
            ],
            options={
                'db_table': 'consumables',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='consumableitems',
            name='consumableitemtypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.consumableitemtypes'),
        ),
        migrations.AddField(
            model_name='consumableitems',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='consumableitems',
            name='groups_tech',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consumableitems_groups_tech', to='assets.groups'),
        ),
        migrations.AddField(
            model_name='consumableitems',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.AddField(
            model_name='consumableitems',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='consumableitems',
            name='users_tech',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consumableitems_users_tech', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ComputersItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('is_dynamic', models.IntegerField(default=0)),
                ('computers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.computers')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.computersitems')),
            ],
            options={
                'db_table': 'computers_items',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='computers',
            name='computertypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.computertypes'),
        ),
        migrations.AddField(
            model_name='computers',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='computers',
            name='groups',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.groups'),
        ),
        migrations.AddField(
            model_name='computers',
            name='groups_tech',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='computers_groups_tech', to='assets.groups'),
        ),
        migrations.AddField(
            model_name='computers',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.AddField(
            model_name='computers',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='computers',
            name='networks',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networks'),
        ),
        migrations.AddField(
            model_name='computers',
            name='states',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states'),
        ),
        migrations.AddField(
            model_name='computers',
            name='users',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='computers',
            name='users_tech',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='computers_users_tech', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Cartridges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_in', models.DateField(blank=True, null=True)),
                ('date_use', models.DateField(blank=True, null=True)),
                ('date_out', models.DateField(blank=True, null=True)),
                ('pages', models.IntegerField(default=0)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('cartridgeitems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.cartridgeitems')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('printers', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.printers')),
            ],
            options={
                'db_table': 'cartridges',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='cartridgeitems',
            name='cartridgeitemtypes',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.cartridgeitemtypes'),
        ),
        migrations.AddField(
            model_name='cartridgeitems',
            name='entities',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities'),
        ),
        migrations.AddField(
            model_name='cartridgeitems',
            name='groups_tech',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cartridgeitems_groups_tech', to='assets.groups'),
        ),
        migrations.AddField(
            model_name='cartridgeitems',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.AddField(
            model_name='cartridgeitems',
            name='manufacturers',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.manufacturers'),
        ),
        migrations.AddField(
            model_name='cartridgeitems',
            name='users_tech',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cartridgeitems_users_tech', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Cables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recursive', models.IntegerField(default=0)),
                ('itemtype_endpoint_a', models.CharField(blank=True, max_length=255, null=True)),
                ('itemtype_endpoint_b', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('otherserial', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('cablestrands', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.cablestrands')),
                ('cabletypes', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.cabletypes')),
                ('entities', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.entities')),
                ('items_endpoint_a', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.cables')),
                ('items_endpoint_b', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cables_itemsEndpointB', to='assets.cables')),
                ('socketmodels_endpoint_a', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cables_socketModelsItemsEndpointA', to='assets.socketmodels')),
                ('socketmodels_endpoint_b', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cables_socketModelsItemsEndpointB', to='assets.socketmodels')),
                ('sockets_endpoint_a', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.sockets')),
                ('sockets_endpoint_b', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cables_socketItemsEndpointA', to='assets.sockets')),
                ('states', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.states')),
                ('users_tech', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cables_users_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cables',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='users',
            name='locations',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.locations'),
        ),
        migrations.AddField(
            model_name='users',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='NetworkportsVlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagged', models.IntegerField(default=0)),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
                ('vlans', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.vlans')),
            ],
            options={
                'db_table': 'networkports_vlans',
                'managed': True,
                'unique_together': {('networkports_id', 'vlans_id')},
            },
        ),
        migrations.CreateModel(
            name='NetworkportsNetworkports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('networkports_1', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='networkportsnetworkports_networkports_1', to='assets.networkports')),
                ('networkports_2', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='networkportsnetworkports_networkports_2', to='assets.networkports')),
            ],
            options={
                'db_table': 'networkports_networkports',
                'managed': True,
                'unique_together': {('networkports_1', 'networkports_2')},
            },
        ),
        migrations.CreateModel(
            name='Networkportmetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('ifinbytes', models.BigIntegerField(blank=True, null=True)),
                ('ifinerrors', models.BigIntegerField(blank=True, null=True)),
                ('ifoutbytes', models.BigIntegerField(blank=True, null=True)),
                ('ifouterrors', models.BigIntegerField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(blank=True, null=True)),
                ('date_mod', models.DateTimeField(blank=True, null=True)),
                ('networkports', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.networkports')),
            ],
            options={
                'db_table': 'networkportmetrics',
                'managed': True,
                'unique_together': {('networkports_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ItemsRacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=255)),
                ('position', models.IntegerField(default=0)),
                ('orientation', models.IntegerField(blank=True, null=True)),
                ('bgcolor', models.CharField(blank=True, max_length=7, null=True)),
                ('hpos', models.IntegerField(default=0)),
                ('is_reserved', models.IntegerField(default=0)),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsracks')),
                ('racks', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.racks')),
            ],
            options={
                'db_table': 'items_racks',
                'managed': True,
                'unique_together': {('itemtype', 'items_id', 'is_reserved')},
            },
        ),
        migrations.CreateModel(
            name='ItemsEnclosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(max_length=255)),
                ('position', models.IntegerField(default=0)),
                ('enclosures', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.enclosures')),
                ('items', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.itemsenclosures')),
            ],
            options={
                'db_table': 'items_enclosures',
                'managed': True,
                'unique_together': {('itemtype', 'items_id')},
            },
        ),
        migrations.CreateModel(
            name='CartridgeitemsPrintermodels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cartridgeitems', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.cartridgeitems')),
                ('printermodels', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.printermodels')),
            ],
            options={
                'db_table': 'cartridgeitems_printermodels',
                'managed': True,
                'unique_together': {('printermodels_id', 'cartridgeitems_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='users',
            unique_together={('name', 'authtype', 'auths_id')},
        ),
    ]
